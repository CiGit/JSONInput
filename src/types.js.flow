// @flow
/* eslint no-use-before-define: [0] */
export type TYPESTRING =
    | 'string'
    | 'number'
    | 'boolean'
    | 'object'
    | 'array'
    | 'null';

type View = {
    type?:
        | string
        | Class<React$Component<*, WidgetProp, *>>
        | ((props: WidgetProp) => React$Element<*>)
};
export type Schema = {
    type: TYPESTRING | TYPESTRING[],
    value?: mixed,
    visible?: (value: mixed, formValue: mixed) => boolean,
    errored?: () => string,
    index?: number,
    view?: View
};
export type WidgetProp = {
    value: mixed,
    onChange: mixed => void,
    schema: Schema,
    view: View,
    errorMessage?: string,
    children?: React$Element<WidgetProp>,
    addKey?: (key: string, value: mixed) => void,
    removeKey?: (key: string) => void,
    alterKey?: (key: string, newKey: string) => void,
    onChildAdd?: () => void,
    onChildRemove?: (index: number) => void
};

export type Action = (path: string[], ...args: mixed[]) => mixed;
