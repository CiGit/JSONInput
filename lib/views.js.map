{"version":3,"file":"views.js","sources":["../src/Comps/Views/labeled.js","../src/Comps/Views/Input.js","../src/Comps/Views/TextWidget.js","../src/Comps/Views/ArrowNumberWidget.js","../src/Comps/Views/CheckboxWidget.js","../src/Comps/Views/ArrayWidget.js","../src/Comps/Views/ObjectWidget.js","../src/Comps/Views/SelectWidget.js","../src/Comps/Views/HashmapWidget.tsx","../src/Comps/Views/index.ts"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction labeled(Comp) {\n  function Label(props) {\n    const required = props.schema.required;\n    const requiredClassName = required ? 'required' : '';\n    return (\n      <div>\n        <label className={`${props.schema.type}Field ${requiredClassName}`}>\n          <span className=\"title\">{props.view.title || props.editKey}</span>\n        </label>\n        <Comp {...props} />\n        <span>{props.view.description}</span>\n        <span>{props.errorMessage}</span>\n      </div>\n    );\n  }\n\n  Label.propTypes = {\n    schema: PropTypes.shape({\n      type: PropTypes.oneOfType([\n        PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean']),\n        PropTypes.arrayOf(\n          PropTypes.oneOf([\n            'object',\n            'string',\n            'number',\n            'array',\n            'boolean',\n            'null',\n          ]),\n        ),\n      ]).isRequired,\n      required: PropTypes.bool,\n      description: PropTypes.string,\n    }).isRequired,\n    editKey: PropTypes.string,\n    view: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n    }).isRequired,\n    errorMessage: PropTypes.arrayOf(PropTypes.string),\n  };\n  Label.defaultProps = {\n    editKey: '',\n    errorMessage: [],\n  };\n  return Label;\n}\n\nexport default labeled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input(props) {\n  return (\n    <input\n      type={props.type}\n      placeholder={props.schema.placeholder}\n      value={props.value == null ? '' : props.value}\n      className={props.className}\n      onChange={event => {\n        if (event.target.type === 'checkbox') {\n          props.onChange(event.target.checked);\n        } else {\n          props.onChange(event.target.value);\n        }\n      }}\n      checked={props.checked}\n    />\n  );\n}\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  checked: PropTypes.bool,\n  value: PropTypes.any, // eslint-disable-line\n  schema: PropTypes.shape({\n    placeholder: PropTypes.string,\n  }).isRequired,\n};\nInput.defaultProps = {\n  className: undefined,\n  checked: false,\n};\nexport default Input;\n","import React from 'react';\nimport labeled from './labeled';\nimport Input from './Input';\n\nfunction TextWidget(props) {\n  return <Input {...props} type=\"text\" />;\n}\n\nexport default labeled(TextWidget);\n","import React from 'react';\nimport labeled from './labeled';\nimport Input from './Input';\n\nfunction ArrowNumberWidget(props) {\n  return <Input {...props} type=\"number\" />;\n}\n\nexport default labeled(ArrowNumberWidget);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport labeled from './labeled';\nimport Input from './Input';\n\nfunction CheckboxWidget(props) {\n  return <Input {...props} type=\"checkbox\" checked={props.value} />;\n}\n\nCheckboxWidget.propTypes = {\n  value: PropTypes.bool,\n};\nCheckboxWidget.defaultProps = { value: false };\n\nexport default labeled(CheckboxWidget);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport labeled from './labeled';\n\nfunction ArrayWidget(props) {\n  function renderChild(child, index) {\n    return (\n      <div>\n        <button\n          onClick={function remove() {\n            props.onChildRemove(index);\n          }}\n        >\n          -\n        </button>\n        {child}\n      </div>\n    );\n  }\n\n  const children = React.Children.map(props.children, renderChild);\n  return (\n    <div>\n      <div>{children}</div>\n      <button onClick={() => props.onChildAdd()}>+</button>\n    </div>\n  );\n}\n\nArrayWidget.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n  onChildRemove: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n  onChildAdd: PropTypes.func.isRequired,\n};\nexport default labeled(ArrayWidget);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport labeled from './labeled';\n\nfunction ObjectWidget(props) {\n  return <div>{props.children}</div>;\n}\n\nObjectWidget.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n\nexport default labeled(ObjectWidget);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SelectWidget(props) {\n  const { view, value, onChange } = props;\n  const choices = view.choices.map(c => (\n    <option key={c.value} value={c.value}>\n      {c.label}\n    </option>\n  ));\n  return (\n    <select value={value} onChange={e => onChange(e.target.value)}>\n      {choices}\n    </select>\n  );\n}\nSelectWidget.propTypes = {\n  view: PropTypes.shape({\n    choices: PropTypes.arrayOf(\n      PropTypes.shape({\n        value: PropTypes.any,\n        label: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n  }).isRequired,\n  value: PropTypes.any, // eslint-disable-line\n  onChange: PropTypes.func.isRequired,\n};\nexport default SelectWidget;\n","import * as React from 'react';\nimport { WidgetProps } from '../../../typings/types';\n\nfunction Hashmap(props: WidgetProps.ObjectProps) {\n  return (\n    <div>\n      {React.Children.map(props.children, (child: any, index) => {\n        return (\n          <div>\n            <input\n              value={child.props.editKey}\n              onChange={e =>\n                props.alterKey(child.props.editKey, e.target.value)\n              }\n            />\n            {child}\n          </div>\n        );\n      })}\n      <button onClick={() => props.addKey('', '')}>+</button>\n    </div>\n  );\n}\n\nexport default Hashmap;\n","import TextWidget from './TextWidget';\nimport ArrowNumberWidget from './ArrowNumberWidget';\nimport CheckboxWidget from './CheckboxWidget';\nimport ArrayWidget from './ArrayWidget';\nimport ObjectWidget from './ObjectWidget';\nimport SelectWidget from './SelectWidget';\nimport HashmapWidget from './HashmapWidget';\n\nexport default {\n  string: TextWidget,\n  number: TextWidget,\n  boolean: CheckboxWidget,\n  array: ArrayWidget,\n  object: ObjectWidget,\n  arrowNumber: ArrowNumberWidget,\n  select: SelectWidget,\n  hashmap: HashmapWidget,\n};\n"],"names":["labeled","Comp","Label","props","requiredClassName","schema","required","React","className","type","view","title","editKey","description","errorMessage","defaultProps","Input","placeholder","value","onChange","event","target","checked","TextWidget","undefined","ArrowNumberWidget","CheckboxWidget","ArrayWidget","children","Children","map","child","index","onClick","onChildRemove","onChildAdd","ObjectWidget","SelectWidget","choices","c","key","label","e","Hashmap","React.createElement","alterKey","addKey","string","number","array","object","arrowNumber","select","hashmap","HashmapWidget"],"mappings":"gUAGA,SAASA,EAAQC,YACNC,EAAMC,OAEPC,EADWD,EAAME,OAAOC,SACO,WAAa,UAEhDC,2BACEA,yBAAOC,UAAcL,EAAME,OAAOI,cAAaL,GAC7CG,wBAAMC,UAAU,SAASL,EAAMO,KAAKC,OAASR,EAAMS,UAErDL,gBAACN,EAASE,GACVI,4BAAOJ,EAAMO,KAAKG,aAClBN,4BAAOJ,EAAMW,sBA8BnBZ,EAAMa,aAAe,CACnBH,QAAS,GACTE,aAAc,IAETZ,EC7CT,SAASc,EAAMb,UAEXI,yBACEE,KAAMN,EAAMM,KACZQ,YAAad,EAAME,OAAOY,YAC1BC,MAAsB,MAAff,EAAMe,MAAgB,GAAKf,EAAMe,MACxCV,UAAWL,EAAMK,UACjBW,SAAU,SAAAC,GACkB,aAAtBA,EAAMC,OAAOZ,KACfN,EAAMgB,SAASC,EAAMC,OAAOC,SAE5BnB,EAAMgB,SAASC,EAAMC,OAAOH,QAGhCI,QAASnB,EAAMmB,UCbrB,SAASC,EAAWpB,UACXI,gBAACS,OAAUb,GAAOM,KAAK,UD2BhCO,EAAMD,aAAe,CACnBP,eAAWgB,EACXF,SAAS,GC1BX,MAAetB,EAAQuB,GCJvB,SAASE,EAAkBtB,UAClBI,gBAACS,OAAUb,GAAOM,KAAK,YAGhC,MAAeT,EAAQyB,GCHvB,SAASC,EAAevB,UACfI,gBAACS,OAAUb,GAAOM,KAAK,WAAWa,QAASnB,EAAMe,SAM1DQ,EAAeX,aAAe,CAAEG,OAAO,GAEvC,MAAelB,EAAQ0B,GCVvB,SAASC,EAAYxB,OAgBbyB,EAAWrB,EAAMsB,SAASC,IAAI3B,EAAMyB,kBAfrBG,EAAOC,UAExBzB,2BACEA,0BACE0B,QAAS,WACP9B,EAAM+B,cAAcF,UAKvBD,YAOLxB,2BACEA,2BAAMqB,GACNrB,0BAAQ0B,QAAS,kBAAM9B,EAAMgC,qBAUnC,MAAenC,EAAQ2B,GC9BvB,SAASS,EAAajC,UACbI,2BAAMJ,EAAMyB,UAOrB,MAAe5B,EAAQoC,GCTvB,SAASC,EAAalC,OACZO,EAA0BP,EAA1BO,KAAMQ,EAAoBf,EAApBe,MAAOC,EAAahB,EAAbgB,SACfmB,EAAU5B,EAAK4B,QAAQR,IAAI,SAAAS,UAC/BhC,0BAAQiC,IAAKD,EAAErB,MAAOA,MAAOqB,EAAErB,OAC5BqB,EAAEE,gBAILlC,0BAAQW,MAAOA,EAAOC,SAAU,SAAAuB,UAAKvB,EAASuB,EAAErB,OAAOH,SACpDoB,GCTP,SAASK,EAAQxC,UAEbyC,2BACGrC,WAAeuB,IAAI3B,EAAMyB,SAAU,SAACG,EAAYC,UAE7CY,2BACEA,yBACE1B,MAAOa,EAAM5B,MAAMS,QACnBO,SAAU,SAAAuB,UACRvC,EAAM0C,SAASd,EAAM5B,MAAMS,QAAS8B,EAAErB,OAAOH,UAGhDa,KAIPa,0BAAQX,QAAS,kBAAM9B,EAAM2C,OAAO,GAAI,YCX9C,MAAe,CACbC,OAAQxB,EACRyB,OAAQzB,UACCG,EACTuB,MAAOtB,EACPuB,OAAQd,EACRe,YAAa1B,EACb2B,OAAQf,EACRgB,QAASC"}