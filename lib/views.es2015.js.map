{"version":3,"file":"views.es2015.js","sources":["../src/Comps/Views/labeled.js","../src/Comps/Views/Input.js","../src/Comps/Views/TextWidget.js","../src/Comps/Views/ArrowNumberWidget.js","../src/Comps/Views/CheckboxWidget.js","../src/Comps/Views/ArrayWidget.js","../src/Comps/Views/ObjectWidget.js","../src/Comps/Views/SelectWidget.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction labeled(Comp) {\n    function Label(props) {\n        const required = props.schema.required;\n        const requiredClassName = required ? 'required' : '';\n        return (\n            <div>\n                <label //eslint-disable-line\n                    className={`${props.schema.type}Field ${requiredClassName}`}\n                >\n                    <span className=\"title\">\n                        {props.view.title || props.editKey}\n                    </span>\n                    <Comp {...props} />\n                    <span>{props.view.description}</span>\n                    <span>{props.errorMessage}</span>\n                </label>\n            </div>\n        );\n    }\n\n    Label.propTypes = {\n        schema: PropTypes.shape({\n            type: PropTypes.oneOfType([\n                PropTypes.oneOf([\n                    'object',\n                    'string',\n                    'number',\n                    'array',\n                    'boolean'\n                ]),\n                PropTypes.arrayOf(\n                    PropTypes.oneOf([\n                        'object',\n                        'string',\n                        'number',\n                        'array',\n                        'boolean',\n                        'null'\n                    ])\n                )\n            ]).isRequired,\n            required: PropTypes.bool,\n            description: PropTypes.string\n        }).isRequired,\n        editKey: PropTypes.string,\n        view: PropTypes.shape({\n            title: PropTypes.string,\n            description: PropTypes.string\n        }).isRequired,\n        errorMessage: PropTypes.arrayOf(PropTypes.string)\n    };\n    Label.defaultProps = {\n        editKey: '',\n        errorMessage: []\n    };\n    return Label;\n}\n\nexport default labeled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction onInputChange(func) {\n    return function onChange(event) {\n        if (event.target.type === 'checkbox') {\n            func(event.target.checked);\n        } else {\n            func(event.target.value);\n        }\n    };\n}\n\nfunction Input(props) {\n    return (\n        <input\n            type={props.type}\n            placeholder={props.schema.placeholder}\n            value={props.value == null ? '' : props.value}\n            className={props.className}\n            onChange={onInputChange(props.onChange)}\n            checked={props.checked}\n        />\n    );\n}\n\nInput.propTypes = {\n    type: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    checked: PropTypes.bool,\n    value: PropTypes.any, // eslint-disable-line\n    schema: PropTypes.shape({\n        placeholder: PropTypes.string,\n    }).isRequired,\n};\nInput.defaultProps = {\n    className: undefined,\n    checked: false,\n};\nexport default Input;\n","import React from 'react';\nimport labeled from './labeled';\nimport Input from './Input';\n\nfunction TextWidget(props) {\n    return (\n        <Input\n            {...props}\n            type=\"string\"\n        />\n    );\n}\n\nexport default labeled(TextWidget);\n","import React from 'react';\nimport labeled from './labeled';\nimport Input from './Input';\n\nfunction ArrowNumberWidget(props) {\n    return (\n        <Input\n            {...props}\n            type=\"number\"\n        />\n    );\n}\n\nexport default labeled(ArrowNumberWidget);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport labeled from './labeled';\nimport Input from './Input';\n\nfunction CheckboxWidget(props) {\n    return (\n        <Input\n            {...props}\n            type=\"checkbox\"\n            checked={props.value}\n        />\n    );\n}\n\nCheckboxWidget.propTypes = {\n    value: PropTypes.bool\n};\nCheckboxWidget.defaultProps = { value: false };\n\nexport default labeled(CheckboxWidget);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport labeled from './labeled';\n\nfunction ArrayWidget(props) {\n    function renderChild(child, index) {\n        return (\n            <div>\n                <button\n                    onClick={function remove() {\n                        props.onChildRemove(index);\n                    }}\n                >\n                    -\n                </button>\n                {child}\n            </div>\n        );\n    }\n\n    const children = React.Children.map(props.children, renderChild);\n    return (\n        <div>\n            <div>\n                {children}\n            </div>\n            <button onClick={() => props.onChildAdd()}>+</button>\n        </div>\n    );\n}\n\nArrayWidget.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n    onChildRemove: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n    onChildAdd: PropTypes.func.isRequired\n};\nexport default labeled(ArrayWidget);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport labeled from './labeled';\n\nfunction ObjectWidget(props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n}\n\nObjectWidget.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.element).isRequired\n};\n\nexport default labeled(ObjectWidget);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SelectWidget(props) {\n    const { view, value, onChange } = props;\n    const choices = view.choices.map(c => (\n        <option key={c.value} value={c.value}>\n            {c.label}\n        </option>\n    ));\n    return (\n        <select value={value} onChange={e => onChange(e.target.value)}>\n            {choices}\n        </select>\n    );\n}\nSelectWidget.propTypes = {\n    view: PropTypes.shape({\n        choices: PropTypes.arrayOf(\n            PropTypes.shape({\n                value: PropTypes.any,\n                label: PropTypes.string.isRequired\n            })\n        ).isRequired\n    }).isRequired,\n    value: PropTypes.any, // eslint-disable-line\n    onChange: PropTypes.func.isRequired\n};\nexport default SelectWidget;\n"],"names":["labeled","Comp","Label","props","requiredClassName","schema","required","React","type","className","view","title","editKey","description","errorMessage","defaultProps","onInputChange","func","event","target","checked","value","Input","placeholder","onChange","undefined","TextWidget","ArrowNumberWidget","CheckboxWidget","ArrayWidget","children","Children","map","child","index","onChildRemove","onClick","onChildAdd","ObjectWidget","choices","key","c","label","e"],"mappings":"uDAGA,SAASA,EAAQC,YACJC,EAAMC,OAELC,EADWD,EAAME,OAAOC,SACO,WAAa,UAE9CC,8DAEsBJ,EAAME,OAAOG,cAAaJ,2BAElCK,UAAU,WACLC,KAAKC,OAASR,EAAMS,yBAE9BX,EAASE,iCACGO,KAAKG,2CACLC,yBAqCvBC,sBACO,oBAGNb,ECvDX,SAASc,EAAcC,UACZ,SAAkBC,GACK,aAAtBA,EAAMC,OAAOX,OACRU,EAAMC,OAAOC,WAEbF,EAAMC,OAAOE,QAK9B,SAASC,EAAMnB,UAEPI,8BACUJ,EAAMK,iBACCL,EAAME,OAAOkB,kBACJ,MAAfpB,EAAMkB,MAAgB,GAAKlB,EAAMkB,gBAC7BlB,EAAMM,mBACPO,EAAcb,EAAMqB,kBACrBrB,EAAMiB,UAe3BE,EAAMP,6BACSU,WACF,2KClCb,SAASC,EAAWvB,UAEZI,gBAACe,OACOnB,QACC,YAKjB,MAAeH,EAAQ0B,GCTvB,SAASC,EAAkBxB,UAEnBI,gBAACe,OACOnB,QACC,YAKjB,MAAeH,EAAQ2B,GCRvB,SAASC,EAAezB,UAEhBI,gBAACe,OACOnB,QACC,mBACIA,EAAMkB,SAQ3BO,EAAeb,cAAiBM,OAAO,GAEvC,MAAerB,EAAQ4B,GChBvB,SAASC,EAAY1B,OAgBX2B,EAAWvB,EAAMwB,SAASC,IAAI7B,EAAM2B,kBAfrBG,EAAOC,UAEpB3B,6DAEiB,aACC4B,cAAcD,sBAYpC3B,mFAIY6B,QAAS,kBAAMjC,EAAMkC,qBAUzC,MAAerC,EAAQ6B,wBC9BftB,6BACWuB,UASnB,MAAe9B,EAAQsC,qBCZX5B,EAA0BP,EAA1BO,KAAMW,EAAoBlB,EAApBkB,MAAOG,EAAarB,EAAbqB,SACfe,EAAU7B,EAAK6B,QAAQP,IAAI,mBAC7BzB,0BAAQiC,IAAKC,EAAEpB,MAAOA,MAAOoB,EAAEpB,SACxBqB,gBAIPnC,0BAAQc,MAAOA,EAAOG,SAAU,mBAAKA,EAASmB,EAAExB,OAAOE"}