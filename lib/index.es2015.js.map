{"version":3,"file":null,"sources":["../src/Comps/Decorators/fromDefaultValue.js","../src/Comps/Views/undefinedWidgetFactory.js","../src/Comps/Decorators/labeled.js","../src/Comps/Views/Input.js","../src/Comps/Views/TextWidget.js","../src/Comps/Views/ArrowNumberWidget.js","../src/Comps/Views/CheckboxWidget.js","../src/Comps/Views/ArrayWidget.js","../src/Comps/Views/ObjectWidget.js","../src/Comps/Views/SelectWidget.js","../src/Comps/Views/index.js","../src/Comps/Views/Widget.js","../src/Utils/customValidator.js","../src/Comps/Decorators/validator.js","../src/Comps/Fields/Object.js","../src/Comps/Fields/String.js","../src/Comps/Fields/Boolean.js","../src/Comps/Fields/Array.js","../src/Comps/Decorators/visible.js","../src/Comps/Fields/Undefined.js","../src/Utils/infer.js","../src/Comps/Decorators/inference.js","../src/Comps/SchemaType.js","../src/Store/actions.js","../node_modules/baobab-react/dist-modules/utils/prop-types.js","../node_modules/baobab-react/dist-modules/utils/helpers.js","../node_modules/baobab-react/dist-modules/higher-order.js","../node_modules/baobab-react/higher-order.js","../src/Store/index.js","../node_modules/react-pure-render/shallowEqual.js","../node_modules/react-pure-render/function.js","../src/Comps/Fields/Number.js","../src/Comps/Fields/index.js","../src/Comps/Container.js","../src/index.js"],"sourcesContent":["import React, { PropTypes } from 'react';\n\nfunction updateDefault({ value, path, actions, schema: { value: defaultValue } }) {\n    const val = value !== undefined ? value : defaultValue;\n    if (value !== val) {\n        actions.setDefaultValue(path, val);\n    }\n    return val;\n}\n\nfunction fromDefaultValue(Comp) {\n    class DefaultValue extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = { val: updateDefault(props) };\n        }\n        componentWillReceiveProps(nextProps) {\n            // if (nextProps.actions.getStatus(nextProps.path)) {\n            //     return;\n            // }\n            this.setState({ val: updateDefault(nextProps) });\n        }\n        render() {\n            return (<Comp {...this.props} value={this.state.val} />);\n        }\n    }\n\n    DefaultValue.propTypes = {\n        value: PropTypes.any,\n        schema: PropTypes.shape({\n            value: PropTypes.any\n        }),\n        onChange: PropTypes.func.isRequired\n    };\n    return DefaultValue;\n}\n\nexport default fromDefaultValue;\n","import React from 'react';\n\nfunction undefinedWidgetFactory(type) {\n    return function UndefinedWidget() {\n        return (\n            <span>\n                {`Widget for '${type}' was not defined`}\n            </span>\n        );\n    };\n}\n\nexport default undefinedWidgetFactory;\n","import React, { PropTypes } from 'react';\n\nfunction labeled(Comp) {\n    function label(props) {\n        const required = props.schema.required;\n        const requiredClassName = required ? 'required' : '';\n        return (\n            <div>\n                <label //eslint-disable-line\n                    className={`${props.schema.type}Field ${requiredClassName}`}\n                >\n                    <span className=\"title\">{props.view.title || props.editKey}</span>\n                    <Comp {...props} />\n                    <span>{props.view.description}</span>\n                    <span>{props.errorMessage}</span>\n                </label>\n            </div>\n        );\n    }\n\n    label.propTypes = {\n        schema: PropTypes.shape({\n            type: PropTypes.oneOfType([\n                PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean']),\n                PropTypes.arrayOf(\n                    PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean', 'null'])\n                )\n            ]).isRequired,\n            required: PropTypes.bool,\n            description: PropTypes.string\n        }),\n        editKey: PropTypes.any,\n        view: PropTypes.object,\n        errorMessage: PropTypes.arrayOf(PropTypes.string)\n    };\n    return label;\n}\n\nexport default labeled;\n","import React, { PropTypes } from 'react';\n\nfunction onInputChange(func) {\n    return function onChange(event) {\n        if (event.target.type === 'checkbox') {\n            func(event.target.checked);\n        } else {\n            func(event.target.value);\n        }\n    };\n}\n\nfunction Input(props) {\n    return (\n        <input\n            type={props.type}\n            placeholder={props.schema.placeholder}\n            value={props.value}\n            className={props.className}\n            onChange={onInputChange(props.onChange)}\n            checked={props.checked}\n        />\n    );\n}\n\nInput.propTypes = {\n    type: PropTypes.string.isRequired,\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    className: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    checked: PropTypes.bool,\n    value: PropTypes.any,\n    schema: PropTypes.shape({\n        placeholder: PropTypes.string\n    })\n};\nexport default Input;\n","import React from 'react';\nimport labeled from '../Decorators/labeled';\nimport Input from './Input';\n\nfunction TextWidget(props) {\n    return (\n        <Input\n            {...props}\n            type=\"string\"\n        />\n    );\n}\n\nexport default labeled(TextWidget);\n","import React from 'react';\nimport labeled from '../Decorators/labeled';\nimport Input from './Input';\n\nfunction ArrowNumberWidget(props) {\n    return (\n        <Input\n            {...props}\n            type=\"number\"\n        />\n    );\n}\n\nexport default labeled(ArrowNumberWidget);\n","import React, { PropTypes } from 'react';\nimport labeled from '../Decorators/labeled';\nimport Input from './Input';\n\nfunction CheckboxWidget(props) {\n    return (\n        <Input\n            {...props}\n            type=\"checkbox\"\n            checked={props.value}\n        />\n    );\n}\n\nCheckboxWidget.propTypes = {\n    value: PropTypes.bool\n};\n\nexport default labeled(CheckboxWidget);\n","import React, { PropTypes } from 'react';\nimport labeled from '../Decorators/labeled';\n\nfunction ArrayWidget(props) {\n    function renderChild(child, index) {\n        return (<div>\n            <span onClick={props.onChildRemove(index)}>-</span>\n            {child}\n        </div>);\n    }\n\n    const children = React.Children.map(props.children, renderChild);\n    return (\n        <div>\n            <div>\n                {children}\n            </div>\n            <span onClick={props.onChildAdd}>+</span>\n        </div>\n    );\n}\n\nArrayWidget.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.element),\n    onChildRemove: PropTypes.func.isRequired,\n    onChildAdd: PropTypes.func.isRequired\n};\nexport default labeled(ArrayWidget);\n","import React, { PropTypes } from 'react';\nimport labeled from '../Decorators/labeled';\n\nfunction ObjectWidget(props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    );\n}\n\nObjectWidget.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.element)\n};\n\nexport default labeled(ObjectWidget);\n","import React, { PropTypes } from 'react';\n\nfunction SelectWidget({ view, value, onChange }) {\n    const choices = view.choices.map(c => (\n        <option\n            key={c.value}\n            value={c.value}\n        >\n            {c.label}\n        </option>\n    ));\n    return (\n        <select value={value} onChange={e => onChange(e.target.value)}>\n            {choices}\n        </select>\n    );\n}\nSelectWidget.propTypes = {\n    view: PropTypes.shape({\n        choices: PropTypes.arrayOf(PropTypes.shape({\n            value: PropTypes.any,\n            label: PropTypes.string.isRequired\n        })).isRequired\n    }),\n    value: PropTypes.any,\n    onChange: PropTypes.func.isRequired\n};\nexport default SelectWidget;\n","import undefinedWidgetFactory from './undefinedWidgetFactory';\nimport TextWidget from './TextWidget';\nimport ArrowNumberWidget from './ArrowNumberWidget';\nimport CheckboxWidget from './CheckboxWidget';\nimport ArrayWidget from './ArrayWidget';\nimport ObjectWidget from './ObjectWidget';\nimport SelectWidget from './SelectWidget';\n\nlet DefaultWidget = {\n    string: TextWidget,\n    number: TextWidget,\n    boolean: CheckboxWidget,\n    array: ArrayWidget,\n    object: ObjectWidget,\n    arrowNumber: ArrowNumberWidget,\n    select: SelectWidget\n};\n\nfunction defaultWidget(type) {\n    return DefaultWidget[type] || undefinedWidgetFactory(type);\n}\n\nfunction setDefaultWidgets(obj) {\n    DefaultWidget = Object.assign({}, DefaultWidget, obj);\n}\n\nexport { defaultWidget, setDefaultWidgets, undefinedWidgetFactory };\n","import React, { PropTypes } from 'react';\nimport { defaultWidget } from '.';\n\nconst EMPTYOBJECT = {};\nfunction Widget(props) {\n    const { schema } = props;\n    const { view, ...restSchema } = schema;\n    if (view) {\n        const { type } = view;\n        if (typeof type === 'string') {\n            const Wdgt = defaultWidget(type);\n            return (\n                <Wdgt\n                    {...props}\n                    schema={restSchema}\n                    view={view}\n                />\n            );\n        }\n        if (typeof type === 'function') {\n            const Type = type;\n            return (\n                <Type\n                    {...props}\n                    schema={restSchema}\n                    view={view}\n                />\n            );\n        }\n    }\n    const renderType = Array.isArray(schema.type) ?\n        schema.type.find(t => t !== 'null') :\n        schema.type;\n    const Wdgt = defaultWidget(renderType);\n    return (\n        <Wdgt\n            {...props}\n            schema={restSchema}\n            view={view || EMPTYOBJECT}\n        />\n    );\n}\n\nWidget.propTypes = {\n    schema: PropTypes.object,\n    path: PropTypes.array,\n    actions: PropTypes.objectOf(PropTypes.func)\n};\nexport default Widget;\n","import jsonschema, { Validator } from 'jsonschema';\n\nconst customValidator = new Validator();\ncustomValidator.attributes.errored = function validateErrored(instance, schema, options) {\n    if (typeof schema.errored !== 'function') {\n        throw new jsonschema.SchemaError('\"errored\" expects a function');\n    }\n    const msg = schema.errored(instance, options.formValue);\n    if (msg) {\n        return msg;\n    }\n    return undefined;\n};\nfunction validate(value, schema, formValue) {\n    return customValidator.validate(value, schema, {\n        formValue\n    });\n}\n\nexport default validate ;\n","import React, { PropTypes } from 'react';\nimport validate from './../../Utils/customValidator';\n\nfunction validated(Comp) {\n    function Validator(props) {\n        function onChange(val) {\n            const validation = validate(val, props.schema, props.actions.getFormValue());\n            const err = validation.errors.map(error => error.message);\n            props.onChange(val, err);\n        }\n\n        return (\n            <Comp\n                {...props}\n                errorMessage={props.actions.getErrors(props.path)}\n                onChange={onChange}\n            />\n        );\n    }\n\n    Validator.propTypes = {\n        onChange: PropTypes.func.isRequired,\n        schema: PropTypes.shape({\n            errored: PropTypes.func\n        }),\n        value: PropTypes.any,\n        path: PropTypes.array.isRequired,\n        actions: PropTypes.objectOf(PropTypes.func).isRequired\n    };\n    return Validator;\n}\n\nexport default validated;\n","import React, { PropTypes } from 'react';\nimport SchemaType from '../SchemaType';\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\nimport Widget from '../Views/Widget';\nimport validator from '../Decorators/validator';\n\n\nfunction renderChildren(props) {\n    const children = [];\n    const properties = props.schema.properties || {};\n    const value = props.value || {};\n    // Holds schema properties and value properties missing from schema.\n    const mergedProperties = Object.keys(properties);\n    // mergedProperties.concat(Object.values(value));\n    Object.keys(value).forEach(v => {\n        if (v in properties) {\n            return;\n        }\n        mergedProperties.push(v);\n    });\n\n    // Index based sorting\n    function sortProperties(a, b) {\n        const aIndex = properties[a] ? properties[a].index || 0 : 0;\n        const bIndex = properties[b] ? properties[b].index || 0 : 0;\n        return aIndex - bIndex;\n    }\n\n    mergedProperties.sort(sortProperties);\n    for (let i = 0; i < mergedProperties.length; i += 1) {\n        const prop = mergedProperties[i];\n        if (prop in properties) {\n            children.push(\n                <SchemaType\n                    {...props}\n                    schema={properties[prop]}\n                    value={value[prop]}\n                    editKey={prop}\n                    key={prop}\n                />\n            );\n        } else {\n            const schema = props.schema.defaultProperties;\n            children.push(\n                <SchemaType\n                    {...props}\n                    schema={schema}\n                    value={value[prop]}\n                    editKey={prop}\n                    key={prop}\n                />\n            );\n        }\n    }\n    return children;\n}\n\nfunction ObjectField(props) {\n    function addKey(key, value) {\n        props.onChange(Object.assign({}, props.value, {\n            [key]: value\n        }));\n    }\n\n    function removeKey(key) {\n        const value = Object.assign({}, props.value);\n        delete value[key];\n        props.onChange(value);\n    }\n\n    function alterKey(key, newKey) {\n        const value = {};\n        Object.keys(props.value).forEach(p => {\n            if (p !== key) {\n                value[p] = props.value[p];\n            } else {\n                value[newKey] = props.value[p];\n            }\n        });\n        props.onChange(value);\n    }\n\n    return (\n        <Widget\n            {...props}\n            addKey={addKey}\n            removeKey={removeKey}\n            alterKey={alterKey}\n        >\n            {renderChildren(props)}\n        </Widget>\n    );\n}\n\nObjectField.propTypes = {\n    schema: PropTypes.shape({\n        properties: PropTypes.object\n    }),\n    children: PropTypes.node,\n    value: PropTypes.any,\n    path: PropTypes.arrayOf(PropTypes.string),\n    onChange: PropTypes.func.isRequired\n};\n\nexport default validator(fromDefaultValue(ObjectField));\n","import React, { PropTypes } from 'react';\nimport Widget from '../Views/Widget';\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\nimport validator from '../Decorators/validator';\n\nfunction StringField(props) {\n    const val = props.value !== undefined && props.value !== null ?\n        String(props.value) :\n        props.value;\n    return (\n        <Widget\n            {...props}\n            value={val}\n        />\n    );\n}\n\nStringField.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    schema: PropTypes.shape({\n        defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        type: PropTypes.oneOfType([\n            PropTypes.oneOf(['string', 'number']),\n            PropTypes.arrayOf(\n                PropTypes.oneOf(['string', 'number', 'null'])\n            )\n        ]).isRequired\n    }),\n    onChange: PropTypes.func.isRequired\n};\nexport { StringField as SimpleStringField };\nexport default validator(fromDefaultValue(StringField));\n","import React from 'react';\nimport Widget from '../Views/Widget';\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\nimport validator from './../Decorators/validator.js';\n\nfunction BooleanField(props) {\n    return (<Widget {...props} />);\n}\n\nexport default validator(fromDefaultValue(BooleanField));\n","import React from 'react';\nimport SchemaType from '../SchemaType';\nimport Widget from '../Views/Widget';\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\n\nfunction onChildChange(index, props) {\n    return function onChange(val) {\n        const { value } = props;\n        if (value) {\n            props.onChange(value.map((e, i) => {\n                if (+i !== +index) {\n                    return e;\n                }\n                return val;\n            }));\n        } else {\n            props.onChange([val]);\n        }\n    };\n}\n\nfunction onChildRemove(props) {\n    return function onRemove(index) {\n        return function doRemove() {\n            const oldValue = props.value || [];\n            props.onChange(oldValue.filter((e, i) => Number(i) !== Number(index)));\n        };\n    };\n}\n\nfunction onChildAdd(props) {\n    return function onAdd() {\n        const oldValue = props.value || [];\n        props.onChange(oldValue.concat([undefined]));\n    };\n}\n\nfunction renderChildren(props) {\n    const { value, schema: { defaultValue, items } } = props;\n    let valueItems;\n    if (value) {\n        valueItems = value;\n    } else if (defaultValue) {\n        valueItems = defaultValue;\n    } else {\n        valueItems = [];\n    }\n    const children = [];\n    valueItems.forEach((val, i) => children.push(\n        <SchemaType\n            {...props}\n            schema={Array.isArray(items) ? (items[i] || {}) : items}\n            value={val}\n            editKey={String(i)}\n            key={i}\n            onChange={onChildChange(i, props)}\n        />\n    ));\n    return children;\n}\n\nfunction ArrayField(props) {\n    return (\n        <Widget\n            {...props}\n            onChildAdd={onChildAdd(props)}\n            onChildRemove={onChildRemove(props)}\n        >\n            {renderChildren(props)}\n        </Widget>\n    );\n}\n\nexport default fromDefaultValue(ArrayField);\n","import React, { PropTypes } from 'react';\n\nfunction visibility(Comp) {\n    function Visible(props) {\n        const { schema: { visible }, value } = props;\n        if (visible && !visible(value, props.actions.getFormValue())) {\n            return null;\n        }\n        return (<Comp {...props} />);\n    }\n\n    Visible.propTypes = {\n        schema: PropTypes.shape({\n            visible: PropTypes.func\n        }),\n        actions: PropTypes.objectOf(PropTypes.func),\n        value: PropTypes.any\n    };\n    return Visible;\n}\n\nexport default visibility;\n","import React, { PropTypes } from 'react';\n\nfunction Undefined(props) {\n    return (<span>{`Undefined field type \"${props.schema.type}\", [${props.path}]`}</span>);\n}\n\nUndefined.propTypes = {\n    schema: PropTypes.shape({\n        type: PropTypes.oneOfType([\n            PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean']),\n            PropTypes.arrayOf(\n                PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean', 'null'])\n            )\n        ]).isRequired\n    }),\n    path: PropTypes.array\n};\nexport default Undefined;\n","export default function infer(value) {\n    switch (typeof value) {\n    case 'number':\n        return 'number';\n    case 'string':\n        return 'string';\n    case 'boolean':\n        return 'boolean';\n    case 'object':\n        return Array.isArray(value) ? 'array' : 'object';\n    default:\n        return 'string';\n    }\n}\n","import React, { PropTypes } from 'react';\nimport infer from './../../Utils/infer.js';\n/**\n * Update store's value path.\n * @param {Array<string>} currentValuePath the valuePath the parent\n * @param {string} editKey the key currently edited\n * @returns {Array<string>}the updated valuePath\n */\nfunction updatePath(currentPath, editKey) {\n    if (editKey) {\n        return currentPath.concat([editKey]);\n    }\n    return currentPath;\n}\n\n/**\n * HOC, compute schema value from inferred type if schema is missing\n * @param {React.Component} Comp component to decorate.\n * @return {React.Component} the decorated component.\n */\nfunction inference(Comp) {\n    function Infer(props) {\n        const { schema } = props;\n        const path = updatePath(props.path, props.editKey);\n        let inferedSchema = schema;\n        if (!inferedSchema || !('type' in inferedSchema)) {\n            inferedSchema = { type: infer(props.value) };\n            // props.actions.updateSchema(path, schema);\n        }\n        return (\n            <Comp\n                {...props}\n                path={path}\n                schema={inferedSchema}\n            />\n        );\n    }\n\n    Infer.propTypes = {\n        schema: PropTypes.object,\n        value: PropTypes.any,\n        path: PropTypes.arrayOf(PropTypes.string).isRequired,\n        editKey: PropTypes.string,\n        actions: PropTypes.objectOf(PropTypes.func).isRequired\n    };\n    return Infer;\n}\n\nexport default inference;\n","import React, { PropTypes } from 'react';\nimport shouldPureComponentUpdate from 'react-pure-render/function';\nimport Fields from './Fields';\nimport visible from './Decorators/visible';\nimport UndefinedField from './Fields/Undefined';\nimport inference from './Decorators/inference';\n\n\n/**\n * bind function callback with its path\n * @param {function(Array<String>)} func callback function to bind\n * @param {Array<string>} path the value's path to act on\n */\nfunction doAction(func, path) {\n    return function action(...args) {\n        func(path, ...args);\n    };\n}\n\n/**\n * Component generating the correct field based on schema.type\n * @constructor\n * @param {Object} props\n */\nclass SchemaType extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChange = doAction(props.actions.update, props.path);\n    }\n    shouldComponentUpdate(...args) {\n        return shouldPureComponentUpdate.apply(this, args);\n    }\n    render() {\n        const { schema: { type } } = this.props;\n        const renderType = Array.isArray(type) ? type.find(t => t !== 'null') : type;\n        const Type = Fields[renderType] || UndefinedField;\n        return (\n            <Type\n                {...this.props}\n                onChange={this.onChange}\n            />\n        );\n    }\n}\n\nSchemaType.propTypes = {\n    schema: PropTypes.shape({\n        type: PropTypes.oneOfType([\n            PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean']),\n            PropTypes.arrayOf(\n                PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean', 'null'])\n            )\n        ]).isRequired\n    }).isRequired,\n    path: PropTypes.arrayOf(PropTypes.string),\n    editKey: PropTypes.string,\n    actions: PropTypes.objectOf(PropTypes.func).isRequired\n};\n\nexport default inference(visible(SchemaType));\n","const VALUE = 'value';\nconst STATUS = 'status';\nconst STATE = 'state';\nconst ERRORS = 'errors';\nconst NOERRORS = [];\n\nexport function setErrors(tree, path, errors) {\n    const errorPath = [STATUS].concat(path).concat([ERRORS]);\n    const errorsCursor = tree.select(errorPath);\n    if (errors && errors.length && Array.isArray(errorsCursor.get())) {\n        errorsCursor.splice([0, errorsCursor.get().length]);\n        errorsCursor.concat(errors || []);\n    } else {\n        errorsCursor.set(errors || NOERRORS);\n    }\n}\n\n/**\n * Update a value in the tree\n *\n * @param {Baobab} tree the tree\n * @param {Array<string>} path path's value to update\n * @param value value to set\n * @param {Array<string>} errors errors relative to the value\n */\nexport function update(tree, path, value, errors) {\n    const statusPath = [STATUS].concat(path);\n    tree.set([VALUE].concat(path), value);\n    tree.set(statusPath.concat([STATE]), 'dirty');\n    setErrors(tree, path, errors);\n}\n\nexport function setDefaultValue(tree, path, value) {\n    tree.set([VALUE].concat(path), value);\n    tree.set([STATUS].concat(path).concat([STATE]), 'pristine');\n}\n\nexport function getStatus(tree, path) {\n    return tree.get([STATUS].concat(path).concat([STATE]));\n}\n\nexport function getErrors(tree, path) {\n    return tree.get([STATUS].concat(path).concat([ERRORS])) || NOERRORS;\n}\n\nexport function getFormValue(tree) {\n    return tree.get(VALUE);\n}\n\nexport function updateSchema(tree, path, value) {\n    const updatedPath = path.reduce((prev, val) => {\n        if (tree.get(prev).type === 'object') {\n            return prev.concat(['properties', val]);\n        } else if (tree.get(prev).type === 'array') {\n            return prev.concat(['items']);\n        }\n        return prev.concat([val]);\n    }, ['schema']);\n    tree.set(updatedPath, value);\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baobab = require('baobab');\n\nvar _baobab2 = _interopRequireDefault(_baobab);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction errorMessage(propName, what) {\n  return 'prop type `' + propName + '` is invalid; it must be ' + what + '.';\n} /**\n   * Baobab-React Custom Prop Types\n   * ===============================\n   *\n   * PropTypes used to propagate context safely.\n   */\n\n\nexports.default = {\n  baobab: function baobab(props, propName) {\n    if (!(propName in props)) return;\n\n    if (!(props[propName] instanceof _baobab2.default)) return new Error(errorMessage(propName, 'a Baobab tree'));\n  }\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.curry = curry;\nexports.solveMapping = solveMapping;\n/**\n * Baobab-React Helpers\n * =====================\n *\n * Miscellaneous helper functions.\n */\n\n/**\n * Simple curry function.\n */\nfunction curry(fn, arity) {\n  return function f1() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length >= arity) {\n      return fn.apply(null, args);\n    } else {\n      return function f2() {\n        for (var _len2 = arguments.length, args2 = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args2[_key2] = arguments[_key2];\n        }\n\n        return f1.apply(null, args.concat(args2));\n      };\n    }\n  };\n}\n\n/**\n * Solving the mapping given to a higher-order construct.\n */\nfunction solveMapping(mapping, props, context) {\n  if (typeof mapping === 'function') mapping = mapping(props, context);\n\n  return mapping;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.branch = exports.root = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _baobab = require('baobab');\n\nvar _baobab2 = _interopRequireDefault(_baobab);\n\nvar _helpers = require('./utils/helpers');\n\nvar _propTypes = require('./utils/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Baobab-React Higher Order Component\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ES6 state of the art higher order component.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar makeError = _baobab2.default.helpers.makeError,\n    isPlainObject = _baobab2.default.type.object;\n\n/**\n * Helpers\n */\nfunction displayName(Component) {\n  return Component.name || Component.displayName || 'Component';\n}\n\nfunction invalidMapping(name, mapping) {\n  throw makeError('baobab-react/higher-order.branch: given cursors mapping is invalid (check the \"' + name + '\" component).', { mapping: mapping });\n}\n\n/**\n * Root component\n */\nfunction root(tree, Component) {\n  if (!(tree instanceof _baobab2.default)) throw makeError('baobab-react/higher-order.root: given tree is not a Baobab.', { target: tree });\n\n  if (typeof Component !== 'function') throw Error('baobab-react/higher-order.root: given target is not a valid React component.');\n\n  var name = displayName(Component);\n\n  var ComposedComponent = function (_React$Component) {\n    _inherits(ComposedComponent, _React$Component);\n\n    function ComposedComponent() {\n      _classCallCheck(this, ComposedComponent);\n\n      return _possibleConstructorReturn(this, Object.getPrototypeOf(ComposedComponent).apply(this, arguments));\n    }\n\n    _createClass(ComposedComponent, [{\n      key: 'getChildContext',\n\n\n      // Handling child context\n      value: function getChildContext() {\n        return {\n          tree: tree\n        };\n      }\n\n      // Render shim\n\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(Component, this.props);\n      }\n    }]);\n\n    return ComposedComponent;\n  }(_react2.default.Component);\n\n  ComposedComponent.displayName = 'Rooted' + name;\n  ComposedComponent.childContextTypes = {\n    tree: _propTypes2.default.baobab\n  };\n\n  return ComposedComponent;\n}\n\n/**\n * Branch component\n */\nfunction branch(cursors, Component) {\n  if (typeof Component !== 'function') throw Error('baobab-react/higher-order.branch: given target is not a valid React component.');\n\n  var name = displayName(Component);\n\n  if (!isPlainObject(cursors) && typeof cursors !== 'function') invalidMapping(name, cursors);\n\n  var ComposedComponent = function (_React$Component2) {\n    _inherits(ComposedComponent, _React$Component2);\n\n    _createClass(ComposedComponent, [{\n      key: 'getDecoratedComponentInstance',\n      value: function getDecoratedComponentInstance() {\n        return this.decoratedComponentInstance;\n      }\n    }, {\n      key: 'handleChildRef',\n      value: function handleChildRef(component) {\n        this.decoratedComponentInstance = component;\n      }\n\n      // Building initial state\n\n    }]);\n\n    function ComposedComponent(props, context) {\n      _classCallCheck(this, ComposedComponent);\n\n      var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(ComposedComponent).call(this, props, context));\n\n      if (cursors) {\n        var mapping = (0, _helpers.solveMapping)(cursors, props, context);\n\n        if (!mapping) invalidMapping(name, mapping);\n\n        // Creating the watcher\n        _this2.watcher = _this2.context.tree.watch(mapping);\n\n        // Hydrating initial state\n        _this2.state = _this2.watcher.get();\n      }\n      return _this2;\n    }\n\n    // On component mount\n\n\n    _createClass(ComposedComponent, [{\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        var _this3 = this;\n\n        // Creating dispatcher\n        this.dispatcher = function (fn) {\n          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          return fn.apply(undefined, [_this3.context.tree].concat(args));\n        };\n\n        if (!this.watcher) return;\n\n        var handler = function handler() {\n          if (_this3.watcher) _this3.setState(_this3.watcher.get());\n        };\n\n        this.watcher.on('update', handler);\n      }\n\n      // Render shim\n\n    }, {\n      key: 'render',\n      value: function render() {\n        var suppl = { dispatch: this.dispatcher };\n\n        return _react2.default.createElement(Component, _extends({}, this.props, suppl, this.state, { ref: this.handleChildRef.bind(this) }));\n      }\n\n      // On component unmount\n\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (!this.watcher) return;\n\n        // Releasing watcher\n        this.watcher.release();\n        this.watcher = null;\n      }\n\n      // On new props\n\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(props) {\n        if (!this.watcher || typeof cursors !== 'function') return;\n\n        var mapping = (0, _helpers.solveMapping)(cursors, props, this.context);\n\n        if (!mapping) invalidMapping(name, mapping);\n\n        // Refreshing the watcher\n        this.watcher.refresh(mapping);\n        this.setState(this.watcher.get());\n      }\n    }]);\n\n    return ComposedComponent;\n  }(_react2.default.Component);\n\n  ComposedComponent.displayName = 'Branched' + name;\n  ComposedComponent.contextTypes = {\n    tree: _propTypes2.default.baobab\n  };\n\n  return ComposedComponent;\n}\n\n// Currying the functions so that they could be used as decorators\nvar curriedRoot = (0, _helpers.curry)(root, 2),\n    curriedBranch = (0, _helpers.curry)(branch, 2);\n\nexports.root = curriedRoot;\nexports.branch = curriedBranch;","var wrappers = require('./dist-modules/higher-order.js');\nexports.root = wrappers.root;\nexports.branch = wrappers.branch;\n","import Baobab from 'baobab';\n\nconst createTree = () => new Baobab({\n    schema: {},\n    value: {},\n    status: {}\n});\n\nexport default createTree;\n","'use strict';\n\nexports.__esModule = true;\nexports['default'] = shallowEqual;\n\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n  for (var i = 0; i < keysA.length; i++) {\n    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = shouldPureComponentUpdate;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _shallowEqual = require('./shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nfunction shouldPureComponentUpdate(nextProps, nextState) {\n  return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);\n}\n\nmodule.exports = exports['default'];","import React, { PropTypes } from 'react';\nimport validator from '../Decorators/validator';\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\nimport { SimpleStringField } from './String';\n\nclass NumberField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: props.value\n        };\n        this.boundChange = this.onChange.bind(this);\n    }\n    componentWillReceiveProps(nextProps) {\n        // if numerical values differ: update\n        if (Number(this.state.value) !== Number(nextProps.value)) {\n            this.setState({\n                value: nextProps.value\n            });\n        }\n    }\n    onChange(val) {\n        const value = val === '' ? undefined : val;\n        const numVal = Number(value);\n        this.setState({\n            value\n        }, () => this.props.onChange(isNaN(numVal) ? value : numVal));\n    }\n    render() {\n        return (\n            <SimpleStringField\n                {...this.props}\n                value={this.state.value}\n                onChange={this.boundChange}\n            />\n        );\n    }\n}\nNumberField.propTypes = {\n    value: PropTypes.number,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default validator(fromDefaultValue(NumberField));\n","import ObjectField from './Object';\nimport StringField from './String';\nimport NumberField from './Number';\nimport BooleanField from './Boolean';\nimport ArrayField from './Array';\n\nexport default {\n    object: ObjectField,\n    string: StringField,\n    number: NumberField,\n    boolean: BooleanField,\n    array: ArrayField\n};\n","import React, { PropTypes } from 'react';\nimport { root, branch } from 'baobab-react/higher-order';\nimport createTree from '../Store';\nimport SchemaType from './SchemaType';\nimport * as actions from '../Store/actions';\nimport validate from './../Utils/customValidator';\n\nconst BranchedSchemaType = branch({\n    schema: 'schema',\n    status: 'status',\n    value: 'value'\n}, SchemaType);\n\n/**\n * Top Component\n */\nclass Container extends React.Component {\n    constructor(props) {\n        super(props);\n        this.tree = createTree();\n        this.updateTree(props.value, props.schema);\n        // should use dispatcher instead. from baobab-react v2\n        this.ACTIONS = {};\n        Object.keys(actions)\n            .forEach(action => {\n                this.ACTIONS[action] = actions[action].bind(this.tree, this.tree);\n                return;\n            });\n        this.rooted = root(this.tree, BranchedSchemaType);\n    }\n    componentWillReceiveProps(nextProps) {\n        this.updateTree(nextProps.value, nextProps.schema);\n    }\n    shouldComponentUpdate() {\n        return false;\n    }\n    componentWillUnmount() {\n        this.tree.release();\n    }\n    getValue() {\n        return this.tree.get('value');\n    }\n    updateTree(value, schema) {\n        this.tree.select('value').release();\n        this.tree.select('value').set(value);\n        this.tree.select('schema').set(schema);\n        this.tree.select('status').release();\n        this.tree.commit();\n        this.tree.select('value')\n            .on('update', event =>\n                this.props.onChange(\n                    event.data.currentData,\n                    validate(\n                        event.data.currentData,\n                        this.tree.get('schema'),\n                        event.data.currentData\n                    ).errors\n                )\n            );\n    }\n    validate() {\n        const validationResult = validate(this.tree.get('value'),\n            this.tree.get('schema'), this.tree.get('value'));\n        const { setErrors } = this.ACTIONS;\n        const errorMap = new Map();\n        // Collect each error associated with a given path\n        validationResult.errors.forEach(error => {\n            const errors = errorMap.get(error.property) || [];\n            errors.push(error.message); // Add new error\n            errorMap.set(error.property, errors);\n        });\n        errorMap.forEach((value, key) => {\n            setErrors(key.split(/\\.|\\[|\\]/).filter(x => x !== '').slice(1), value);\n        });\n        return validationResult.errors;\n    }\n    render() {\n        const Rooted = this.rooted;\n        return (\n            <Rooted\n                onChange={this.props.onChange}\n                path={[]}\n                actions={this.ACTIONS}\n            />\n        );\n    }\n}\nContainer.propTypes = {\n    onChange: PropTypes.func,\n    schema: PropTypes.object,\n    value: PropTypes.any\n};\n\nexport default Container;\n","import Container from './Comps/Container';\nimport { setDefaultWidgets } from './Comps/Views';\n\nContainer.setDefaultWidgets = setDefaultWidgets;\nexport default Container;\n"],"names":["updateDefault","value","path","actions","defaultValue","schema","val","undefined","setDefaultValue","fromDefaultValue","Comp","DefaultValue","props","state","nextProps","setState","React","this","Component","undefinedWidgetFactory","type","labeled","label","required","requiredClassName","className","view","title","editKey","description","errorMessage","onInputChange","func","event","target","checked","Input","placeholder","onChange","TextWidget","ArrowNumberWidget","CheckboxWidget","ArrayWidget","renderChild","child","index","onClick","onChildRemove","children","Children","map","onChildAdd","ObjectWidget","SelectWidget","_onChange","choices","c","e","defaultWidget","DefaultWidget","setDefaultWidgets","obj","Object","assign","Widget","restSchema","_Wdgt","Type","renderType","Array","isArray","find","t","Wdgt","EMPTYOBJECT","validate","formValue","customValidator","validated","Validator","validation","getFormValue","err","errors","error","message","getErrors","renderChildren","sortProperties","a","b","aIndex","properties","bIndex","mergedProperties","keys","forEach","v","push","sort","i","length","prop","SchemaType","defaultProperties","ObjectField","addKey","key","removeKey","alterKey","newKey","p","StringField","String","BooleanField","onChildChange","oldValue","filter","Number","concat","items","valueItems","ArrayField","visibility","Visible","visible","Undefined","infer","updatePath","currentPath","inference","Infer","inferedSchema","doAction","args","setErrors","tree","errorPath","STATUS","ERRORS","errorsCursor","select","get","splice","set","NOERRORS","update","statusPath","VALUE","STATE","getStatus","updateSchema","updatedPath","reduce","prev","_interopRequireDefault","__esModule","default","propName","what","defineProperty","exports","_baobab","require$$0","_baobab2","baobab","Error","curry","fn","arity","f1","_len","arguments","_key","apply","_len2","args2","_key2","solveMapping","mapping","context","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","displayName","name","invalidMapping","makeError","root","ComposedComponent","_React$Component","getPrototypeOf","_createClass","_react2","createElement","childContextTypes","_propTypes2","branch","cursors","isPlainObject","_React$Component2","_this2","_helpers","watcher","watch","decoratedComponentInstance","component","_this3","dispatcher","handler","on","suppl","dispatch","_extends","ref","handleChildRef","bind","release","refresh","contextTypes","source","hasOwnProperty","defineProperties","descriptor","protoProps","staticProps","_react","require$$3","require$$2","require$$1","_propTypes","helpers","object","curriedRoot","curriedBranch","wrappers","createTree","Baobab","shallowEqual","objA","objB","keysA","keysB","bHasOwnProperty","module","shouldPureComponentUpdate","nextState","_shallowEqual2","_shallowEqual","attributes","errored","options","jsonschema","SchemaError","msg","validator","NumberField","boundChange","_this","numVal","isNaN","SimpleStringField","Fields","UndefinedField","BranchedSchemaType","Container","updateTree","ACTIONS","action","rooted","commit","data","currentData","_validate","validationResult","errorMap","Map","property","split","x","slice","Rooted"],"mappings":"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"}