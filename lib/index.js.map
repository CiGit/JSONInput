{"version":3,"file":null,"sources":["../src/Comps/Decorators/fromDefaultValue.js","../src/Comps/Views/undefinedWidgetFactory.js","../src/Comps/Decorators/labeled.js","../src/Comps/Views/Input.js","../src/Comps/Views/TextWidget.js","../src/Comps/Views/ArrowNumberWidget.js","../src/Comps/Views/CheckboxWidget.js","../src/Comps/Views/ArrayWidget.js","../src/Comps/Views/ObjectWidget.js","../src/Comps/Views/SelectWidget.js","../src/Comps/Views/index.js","../src/Comps/Views/Widget.js","../src/Utils/customValidator.js","../src/Comps/Decorators/validator.js","../src/Comps/Fields/Object.js","../src/Comps/Fields/String.js","../src/Comps/Fields/Boolean.js","../src/Comps/Fields/Array.js","../src/Comps/Decorators/visible.js","../src/Comps/Fields/Undefined.js","../src/Utils/infer.js","../src/Comps/Decorators/inference.js","../src/Comps/SchemaType.js","../src/Store/actions.js","../src/Store/index.js","../node_modules/baobab-react/dist-modules/utils/prop-types.js","../node_modules/baobab-react/dist-modules/utils/helpers.js","../node_modules/baobab-react/dist-modules/higher-order.js","../node_modules/baobab-react/higher-order.js","../src/Comps/Fields/Number.js","../src/Comps/Fields/index.js","../node_modules/react-pure-render/shallowEqual.js","../node_modules/react-pure-render/function.js","../src/Comps/Container.js"],"sourcesContent":["import React, { PropTypes } from 'react';\r\n\r\nfunction updateDefault({ value, path, actions, schema: { value: defaultValue } }) {\r\n    const val = value !== undefined ? value : defaultValue;\r\n    if (value !== val) {\r\n        actions.setDefaultValue(path, val);\r\n    }\r\n}\r\n\r\nfunction fromDefaultValue(Comp) {\r\n    class DefaultValue extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            updateDefault(props);\r\n        }\r\n        componentWillReceiveProps(nextProps) {\r\n            // if (nextProps.actions.getStatus(nextProps.path)) {\r\n            //     return;\r\n            // }\r\n            updateDefault(nextProps);\r\n        }\r\n        render() {\r\n            return (<Comp {...this.props} />);\r\n        }\r\n    }\r\n\r\n    DefaultValue.propTypes = {\r\n        value: PropTypes.any,\r\n        schema: PropTypes.shape({\r\n            value: PropTypes.any\r\n        }),\r\n        onChange: PropTypes.func.isRequired\r\n    };\r\n    return DefaultValue;\r\n}\r\n\r\nexport default fromDefaultValue;\r\n","import React from 'react';\r\n\r\nfunction undefinedWidgetFactory(type) {\r\n    return function UndefinedWidget() {\r\n        return (\r\n            <span>\r\n                {`Widget for '${type}' was not defined`}\r\n            </span>\r\n        );\r\n    };\r\n}\r\n\r\nexport default undefinedWidgetFactory;\r\n","import React, { PropTypes } from 'react';\r\n\r\nfunction labeled(Comp) {\r\n    function label(props) {\r\n        const required = props.schema.required;\r\n        const requiredClassName = required ? 'required' : '';\r\n        return (\r\n            <div>\r\n                <label className={`${props.schema.type}Field ${requiredClassName}`}>\r\n                    <span className=\"title\">{props.view.title || props.editKey}</span>\r\n                    <Comp {...props} />\r\n                    <span>{props.view.description}</span>\r\n                    <span>{props.errorMessage}</span>\r\n                </label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    label.propTypes = {\r\n        schema: PropTypes.shape({\r\n            type: PropTypes.oneOfType([\r\n                PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean']),\r\n                PropTypes.arrayOf(\r\n                    PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean', 'null'])\r\n                )\r\n            ]).isRequired,\r\n            required: PropTypes.bool,\r\n            description: PropTypes.string\r\n        }),\r\n        editKey: PropTypes.any,\r\n        view: PropTypes.object,\r\n        errorMessage: PropTypes.arrayOf(PropTypes.string)\r\n    };\r\n    return label;\r\n}\r\n\r\nexport default labeled;\r\n","import React, { PropTypes } from 'react';\r\n\r\nfunction onInputChange(func) {\r\n    return function onChange(event) {\r\n        if (event.target.type === 'checkbox') {\r\n            func(event.target.checked);\r\n        } else {\r\n            func(event.target.value);\r\n        }\r\n    };\r\n}\r\n\r\nfunction Input(props) {\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            placeholder={props.schema.placeholder}\r\n            value={props.value}\r\n            className={props.className}\r\n            onChange={onInputChange(props.onChange)}\r\n            checked={props.checked}\r\n        />\r\n    );\r\n}\r\n\r\nInput.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    className: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    checked: PropTypes.bool,\r\n    value: PropTypes.any,\r\n    schema: PropTypes.shape({\r\n        placeholder: PropTypes.string\r\n    })\r\n};\r\nexport default Input;\r\n","import React from 'react';\r\nimport labeled from '../Decorators/labeled';\r\nimport Input from './Input';\r\n\r\nfunction TextWidget(props) {\r\n    return (\r\n        <Input\r\n            {...props}\r\n            type=\"string\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default labeled(TextWidget);\r\n","import React from 'react';\r\nimport labeled from '../Decorators/labeled';\r\nimport Input from './Input';\r\n\r\nfunction ArrowNumberWidget(props) {\r\n    return (\r\n        <Input\r\n            {...props}\r\n            type=\"number\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default labeled(ArrowNumberWidget);\r\n","import React, { PropTypes } from 'react';\r\nimport labeled from '../Decorators/labeled';\r\nimport Input from './Input';\r\n\r\nfunction CheckboxWidget(props) {\r\n    return (\r\n        <Input\r\n            {...props}\r\n            type=\"checkbox\"\r\n            checked={props.value}\r\n        />\r\n    );\r\n}\r\n\r\nCheckboxWidget.propTypes = {\r\n    value: PropTypes.bool\r\n};\r\n\r\nexport default labeled(CheckboxWidget);\r\n","import React, { PropTypes } from 'react';\r\nimport labeled from '../Decorators/labeled';\r\n\r\nfunction ArrayWidget(props) {\r\n    function renderChild(child, index) {\r\n        return (<div>\r\n            <span onClick={props.onChildRemove(index)}>-</span>\r\n            {child}\r\n        </div>);\r\n    }\r\n\r\n    const children = React.Children.map(props.children, renderChild);\r\n    return (\r\n        <div>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <span onClick={props.onChildAdd}>+</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nArrayWidget.propTypes = {\r\n    children: PropTypes.arrayOf(PropTypes.element),\r\n    onChildRemove: PropTypes.func.isRequired,\r\n    onChildAdd: PropTypes.func.isRequired\r\n};\r\nexport default labeled(ArrayWidget);\r\n","import React, { PropTypes } from 'react';\r\nimport labeled from '../Decorators/labeled';\r\n\r\nfunction ObjectWidget(props) {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nObjectWidget.propTypes = {\r\n    children: PropTypes.arrayOf(PropTypes.element)\r\n};\r\n\r\nexport default labeled(ObjectWidget);\r\n","import React, { PropTypes } from 'react';\n\nfunction SelectWidget({ view, value, onChange }) {\n    const choices = view.choices.map(c => (\n        <option\n            key={c.value}\n            value={c.value}\n        >\n            {c.label}\n        </option>\n    ));\n    return (\n        <select value={value} onChange={e => onChange(e.target.value)}>\n            {choices}\n        </select>\n    );\n}\nSelectWidget.propTypes = {\n    view: PropTypes.shape({\n        choices: PropTypes.arrayOf(PropTypes.shape({\n            value: PropTypes.any,\n            label: PropTypes.string.isRequired\n        })).isRequired\n    }),\n    value: PropTypes.any,\n    onChange: PropTypes.func.isRequired\n};\nexport default SelectWidget;\n","import undefinedWidgetFactory from './undefinedWidgetFactory';\nimport TextWidget from './TextWidget';\nimport ArrowNumberWidget from './ArrowNumberWidget';\nimport CheckboxWidget from './CheckboxWidget';\nimport ArrayWidget from './ArrayWidget';\nimport ObjectWidget from './ObjectWidget';\nimport SelectWidget from './SelectWidget';\n\nlet DefaultWidget = {\n    string: TextWidget,\n    number: TextWidget,\n    boolean: CheckboxWidget,\n    array: ArrayWidget,\n    object: ObjectWidget,\n    arrowNumber: ArrowNumberWidget,\n    select: SelectWidget\n};\n\nfunction defaultWidget(type) {\n    return DefaultWidget[type] || undefinedWidgetFactory(type);\n}\n\nfunction setDefaultWidgets(obj) {\n    DefaultWidget = Object.assign({}, DefaultWidget, obj);\n}\n\nexport { defaultWidget, setDefaultWidgets, undefinedWidgetFactory };\n","import React, { PropTypes } from 'react';\r\nimport { defaultWidget } from '.';\r\n\r\nconst EMPTYOBJECT = {};\r\nfunction Widget(props) {\r\n    const { schema } = props;\r\n    const { view, ...restSchema } = schema;\r\n    if (view) {\r\n        const { type } = view;\r\n        if (typeof type === 'string') {\r\n            const Wdgt = defaultWidget(type);\r\n            return (\r\n                <Wdgt\r\n                    {...props}\r\n                    schema={restSchema}\r\n                    view={view}\r\n                />\r\n            );\r\n        }\r\n        if (typeof type === 'function') {\r\n            const Type = type;\r\n            return (\r\n                <Type\r\n                    {...props}\r\n                    schema={restSchema}\r\n                    view={view}\r\n                />\r\n            );\r\n        }\r\n    }\r\n    const renderType = Array.isArray(schema.type) ?\r\n        schema.type.find(t => t !== 'null') :\r\n        schema.type;\r\n    const Wdgt = defaultWidget(renderType);\r\n    return (\r\n        <Wdgt\r\n            {...props}\r\n            schema={restSchema}\r\n            view={view || EMPTYOBJECT}\r\n        />\r\n    );\r\n}\r\n\r\nWidget.propTypes = {\r\n    schema: PropTypes.object,\r\n    path: PropTypes.array,\r\n    actions: PropTypes.objectOf(PropTypes.func)\r\n};\r\nexport default Widget;\r\n","import jsonschema, { Validator } from 'jsonschema';\r\n\r\nconst customValidator = new Validator();\r\ncustomValidator.attributes.errored = function validateErrored(instance, schema, options) {\r\n    if (typeof schema.errored !== 'function') {\r\n        throw new jsonschema.SchemaError('\"errored\" expects a function');\r\n    }\r\n    const msg = schema.errored(instance, options.formValue);\r\n    if (msg) {\r\n        return msg;\r\n    }\r\n    return undefined;\r\n};\r\nfunction validate(value, schema, formValue) {\r\n    return customValidator.validate(value, schema, {\r\n        formValue\r\n    });\r\n}\r\n\r\nexport { validate };\r\n","import React, { PropTypes } from 'react';\r\nimport { validate } from './../../Utils/customValidator';\r\n\r\nfunction validated(Comp) {\r\n    function Validator(props) {\r\n        function onChange(val) {\r\n            const validation = validate(val, props.schema, props.actions.getFormValue());\r\n            const err = validation.errors.map(error => error.message);\r\n            props.onChange(val, err);\r\n        }\r\n\r\n        return (\r\n            <Comp\r\n                {...props}\r\n                errorMessage={props.actions.getErrors(props.path)}\r\n                onChange={onChange}\r\n            />\r\n        );\r\n    }\r\n\r\n    Validator.propTypes = {\r\n        onChange: PropTypes.func.isRequired,\r\n        schema: PropTypes.shape({\r\n            errored: PropTypes.func\r\n        }),\r\n        value: PropTypes.any,\r\n        path: PropTypes.array.isRequired,\r\n        actions: PropTypes.objectOf(PropTypes.func).isRequired\r\n    };\r\n    return Validator;\r\n}\r\n\r\nexport default validated;\r\n","import React, { PropTypes } from 'react';\r\nimport SchemaType from '../SchemaType';\r\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\r\nimport Widget from '../Views/Widget';\r\nimport validator from '../Decorators/validator';\r\n\r\n\r\nfunction renderChildren(props) {\r\n    const children = [];\r\n    const properties = props.schema.properties || {};\r\n    const value = props.value || {};\r\n    // Holds schema properties and value properties missing from schema.\r\n    const mergedProperties = Object.keys(properties);\r\n    // mergedProperties.concat(Object.values(value));\r\n    Object.keys(value).forEach(v => {\r\n        if (properties.hasOwnProperty(v)) {\r\n            return;\r\n        }\r\n        mergedProperties.push(v);\r\n    });\r\n\r\n    // Index based sorting\r\n    function sortProperties(a, b) {\r\n        const aIndex = properties[a] ? properties[a].index || 0 : 0;\r\n        const bIndex = properties[b] ? properties[b].index || 0 : 0;\r\n        return aIndex - bIndex;\r\n    }\r\n\r\n    mergedProperties.sort(sortProperties);\r\n    for (let i = 0; i < mergedProperties.length; i += 1) {\r\n        const prop = mergedProperties[i];\r\n        if (properties.hasOwnProperty(prop)) {\r\n            children.push(\r\n                <SchemaType\r\n                    {...props}\r\n                    schema={properties[prop]}\r\n                    value={value[prop]}\r\n                    editKey={prop}\r\n                    key={prop}\r\n                />\r\n            );\r\n        } else {\r\n            const schema = props.schema.defaultProperties;\r\n            children.push(\r\n                <SchemaType\r\n                    {...props}\r\n                    schema={schema}\r\n                    value={value[prop]}\r\n                    editKey={prop}\r\n                    key={prop}\r\n                />\r\n            );\r\n        }\r\n    }\r\n    return children;\r\n}\r\n\r\nfunction ObjectField(props) {\r\n    function addKey(key, value) {\r\n        props.onChange(Object.assign({}, props.value, {\r\n            [key]: value\r\n        }));\r\n    }\r\n\r\n    function removeKey(key) {\r\n        const value = Object.assign({}, props.value);\r\n        delete value[key];\r\n        props.onChange(value);\r\n    }\r\n\r\n    function alterKey(key, newKey) {\r\n        const value = {};\r\n        Object.keys(props.value).forEach(p => {\r\n            if (p !== key) {\r\n                value[p] = props.value[p];\r\n            } else {\r\n                value[newKey] = props.value[p];\r\n            }\r\n        });\r\n        props.onChange(value);\r\n    }\r\n\r\n    return (\r\n        <Widget\r\n            {...props}\r\n            addKey={addKey}\r\n            removeKey={removeKey}\r\n            alterKey={alterKey}\r\n        >\r\n            {renderChildren(props)}\r\n        </Widget>\r\n    );\r\n}\r\n\r\nObjectField.propTypes = {\r\n    schema: PropTypes.shape({\r\n        properties: PropTypes.object\r\n    }),\r\n    children: PropTypes.node,\r\n    value: PropTypes.any,\r\n    path: PropTypes.arrayOf(PropTypes.string),\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default validator(fromDefaultValue(ObjectField));\r\n","import React, { PropTypes } from 'react';\r\nimport Widget from '../Views/Widget';\r\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\r\nimport validator from '../Decorators/validator';\r\n\r\nfunction StringField(props) {\r\n    const val = props.value !== undefined && props.value !== null ?\r\n        String(props.value) :\r\n        props.value;\r\n    return (\r\n        <Widget\r\n            {...props}\r\n            value={val}\r\n        />\r\n    );\r\n}\r\n\r\nStringField.propTypes = {\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    schema: PropTypes.shape({\r\n        defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n        type: PropTypes.oneOfType([\r\n            PropTypes.oneOf(['string', 'number']),\r\n            PropTypes.arrayOf(\r\n                PropTypes.oneOf(['string', 'number', 'null'])\r\n            )\r\n        ]).isRequired\r\n    }),\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nexport { StringField as SimpleStringField };\r\nexport default validator(fromDefaultValue(StringField));\r\n","import React from 'react';\r\nimport Widget from '../Views/Widget';\r\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\r\nimport validator from './../Decorators/validator.js';\r\n\r\nfunction BooleanField(props) {\r\n    return (<Widget {...props} />);\r\n}\r\n\r\nexport default validator(fromDefaultValue(BooleanField));\r\n","import React from 'react';\r\nimport SchemaType from '../SchemaType';\r\nimport Widget from '../Views/Widget';\r\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\r\n\r\nfunction onChildChange(index, props) {\r\n    return function onChange(val) {\r\n        const { value } = props;\r\n        if (value) {\r\n            props.onChange(value.map((e, i) => {\r\n                if (+i !== +index) {\r\n                    return e;\r\n                }\r\n                return val;\r\n            }));\r\n        } else {\r\n            props.onChange([val]);\r\n        }\r\n    };\r\n}\r\n\r\nfunction onChildRemove(props) {\r\n    return function onRemove(index) {\r\n        return function doRemove() {\r\n            const oldValue = props.value || [];\r\n            props.onChange(oldValue.filter((e, i) => Number(i) !== Number(index)));\r\n        };\r\n    };\r\n}\r\n\r\nfunction onChildAdd(props) {\r\n    return function onAdd() {\r\n        const oldValue = props.value || [];\r\n        props.onChange(oldValue.concat([undefined]));\r\n    };\r\n}\r\n\r\nfunction renderChildren(props) {\r\n    const { value, schema: { defaultValue, items } } = props;\r\n    let valueItems;\r\n    if (value) {\r\n        valueItems = value;\r\n    } else if (defaultValue) {\r\n        valueItems = defaultValue;\r\n    } else {\r\n        valueItems = [];\r\n    }\r\n    const children = [];\r\n    valueItems.forEach((val, i) => children.push(\r\n        <SchemaType\r\n            {...props}\r\n            schema={items}\r\n            value={val}\r\n            editKey={String(i)}\r\n            key={i}\r\n            onChange={onChildChange(i, props)}\r\n        />\r\n    ));\r\n    return children;\r\n}\r\n\r\nfunction ArrayField(props) {\r\n    return (\r\n        <Widget\r\n            {...props}\r\n            onChildAdd={onChildAdd(props)}\r\n            onChildRemove={onChildRemove(props)}\r\n        >\r\n            {renderChildren(props)}\r\n        </Widget>\r\n    );\r\n}\r\n\r\nexport default fromDefaultValue(ArrayField);\r\n","import React, { PropTypes } from 'react';\r\n\r\nfunction visibility(Comp) {\r\n    function Visible(props) {\r\n        const { schema: { visible }, value } = props;\r\n        if (visible && !visible(value, props.actions.getFormValue())) {\r\n            return null;\r\n        }\r\n        return (<Comp {...props} />);\r\n    }\r\n\r\n    Visible.propTypes = {\r\n        schema: PropTypes.shape({\r\n            visible: PropTypes.func\r\n        }),\r\n        actions: PropTypes.objectOf(PropTypes.func),\r\n        value: PropTypes.any\r\n    };\r\n    return Visible;\r\n}\r\n\r\nexport default visibility;\r\n","import React, { PropTypes } from 'react';\r\n\r\nfunction Undefined(props) {\r\n    return (<span>{`Undefined field type \"${props.schema.type}\", [${props.path}]`}</span>);\r\n}\r\n\r\nUndefined.propTypes = {\r\n    schema: PropTypes.shape({\r\n        type: PropTypes.oneOfType([\r\n            PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean']),\r\n            PropTypes.arrayOf(\r\n                PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean', 'null'])\r\n            )\r\n        ]).isRequired\r\n    }),\r\n    path: PropTypes.array\r\n};\r\nexport default Undefined;\r\n","export function infer(value) {\r\n    switch (typeof value) {\r\n    case 'number':\r\n        return 'number';\r\n    case 'string':\r\n        return 'string';\r\n    case 'boolean':\r\n        return 'boolean';\r\n    case 'object':\r\n        return Array.isArray(value) ? 'array' : 'object';\r\n    default:\r\n        return 'string';\r\n    }\r\n}\r\n","import React, { PropTypes } from 'react';\r\nimport { infer } from './../../Utils/infer.js';\r\n/**\r\n * Update store's value path.\r\n * @param {Array<string>} currentValuePath the valuePath the parent\r\n * @param {string} editKey the key currently edited\r\n * @returns {Array<string>}the updated valuePath\r\n */\r\nfunction updatePath(currentPath, editKey) {\r\n    if (editKey) {\r\n        return currentPath.concat([editKey]);\r\n    }\r\n    return currentPath;\r\n}\r\n\r\n/**\r\n * HOC, compute schema value from inferred type if schema is missing\r\n * @param {React.Component} Comp component to decorate.\r\n * @return {React.Component} the decorated component.\r\n */\r\nfunction inference(Comp) {\r\n    function Infer(props) {\r\n        const { schema } = props;\r\n        const path = updatePath(props.path, props.editKey);\r\n        let inferedSchema = schema;\r\n        if (!inferedSchema || !inferedSchema.hasOwnProperty('type')) {\r\n            inferedSchema = { type: infer(props.value) };\r\n            // props.actions.updateSchema(path, schema);\r\n        }\r\n        return (\r\n            <Comp\r\n                {...props}\r\n                path={path}\r\n                schema={inferedSchema}\r\n            />\r\n        );\r\n    }\r\n\r\n    Infer.propTypes = {\r\n        schema: PropTypes.object,\r\n        value: PropTypes.any,\r\n        path: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n        editKey: PropTypes.string,\r\n        actions: PropTypes.objectOf(PropTypes.func).isRequired\r\n    };\r\n    return Infer;\r\n}\r\n\r\nexport default inference;\r\n","import React, { PropTypes } from 'react';\r\nimport Fields from './Fields';\r\nimport visible from './Decorators/visible';\r\nimport shouldPureComponentUpdate from 'react-pure-render/function';\r\nimport UndefinedField from './Fields/Undefined';\r\nimport inference from './Decorators/inference';\r\n\r\n\r\n/**\r\n * bind function callback with its path\r\n * @param {function(Array<String>)} func callback function to bind\r\n * @param {Array<string>} path the value's path to act on\r\n */\r\nfunction doAction(func, path) {\r\n    return function action(...args) {\r\n        func(path, ...args);\r\n    };\r\n}\r\n\r\n/**\r\n * Component generating the correct field based on schema.type\r\n * @constructor\r\n * @param {Object} props\r\n */\r\nclass SchemaType extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChange = doAction(props.actions.update, props.path);\r\n    }\r\n    shouldComponentUpdate(...args) {\r\n        return shouldPureComponentUpdate.apply(this, args);\r\n    }\r\n    render() {\r\n        const { schema: { type } } = this.props;\r\n        const renderType = Array.isArray(type) ? type.find(t => t !== 'null') : type;\r\n        const Type = Fields[renderType] || UndefinedField;\r\n        return (\r\n            <Type\r\n                {...this.props}\r\n                onChange={this.onChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSchemaType.propTypes = {\r\n    schema: PropTypes.shape({\r\n        type: PropTypes.oneOfType([\r\n            PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean']),\r\n            PropTypes.arrayOf(\r\n                PropTypes.oneOf(['object', 'string', 'number', 'array', 'boolean', 'null'])\r\n            )\r\n        ]).isRequired\r\n    }).isRequired,\r\n    path: PropTypes.arrayOf(PropTypes.string),\r\n    editKey: PropTypes.string,\r\n    actions: PropTypes.objectOf(PropTypes.func).isRequired\r\n};\r\n\r\nexport default inference(visible(SchemaType));\r\n","const VALUE = 'value';\r\nconst STATUS = 'status';\r\nconst STATE = 'state';\r\nconst ERRORS = 'errors';\r\nconst NOERRORS = [];\r\n\r\nexport function setErrors(tree, path, errors) {\r\n    const errorPath = [STATUS].concat(path).concat([ERRORS]);\r\n    const errorsCursor = tree.select(errorPath);\r\n    if (errors && errors.length && Array.isArray(errorsCursor.get())) {\r\n        errorsCursor.splice([0, errorsCursor.get().length]);\r\n        errorsCursor.concat(errors || []);\r\n    } else {\r\n        errorsCursor.set(errors || NOERRORS);\r\n    }\r\n}\r\n\r\n/**\r\n * Update a value in the tree\r\n *\r\n * @param {Baobab} tree the tree\r\n * @param {Array<string>} path path's value to update\r\n * @param value value to set\r\n * @param {Array<string>} errors errors relative to the value\r\n */\r\nexport function update(tree, path, value, errors) {\r\n    const statusPath = [STATUS].concat(path);\r\n    tree.set([VALUE].concat(path), value);\r\n    tree.set(statusPath.concat([STATE]), 'dirty');\r\n    setErrors(tree, path, errors);\r\n}\r\n\r\nexport function setDefaultValue(tree, path, value) {\r\n    tree.set([VALUE].concat(path), value);\r\n    tree.set([STATUS].concat(path).concat([STATE]), 'pristine');\r\n}\r\n\r\nexport function getStatus(tree, path) {\r\n    return tree.get([STATUS].concat(path).concat([STATE]));\r\n}\r\n\r\nexport function getErrors(tree, path) {\r\n    return tree.get([STATUS].concat(path).concat([ERRORS])) || NOERRORS;\r\n}\r\n\r\nexport function getFormValue(tree) {\r\n    return tree.get(VALUE);\r\n}\r\n\r\nexport function updateSchema(tree, path, value) {\r\n    const updatedPath = path.reduce((prev, val) => {\r\n        if (tree.get(prev).type === 'object') {\r\n            return prev.concat(['properties', val]);\r\n        } else if (tree.get(prev).type === 'array') {\r\n            return prev.concat(['items']);\r\n        }\r\n        return prev.concat([val]);\r\n    }, ['schema']);\r\n    tree.set(updatedPath, value);\r\n}\r\n","import Baobab from 'baobab';\r\n\r\nconst createTree = () => new Baobab({\r\n    schema: {},\r\n    value: {},\r\n    status: {}\r\n});\r\n\r\nexport default createTree;\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baobab = require('baobab');\n\nvar _baobab2 = _interopRequireDefault(_baobab);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction errorMessage(propName, what) {\n  return 'prop type `' + propName + '` is invalid; it must be ' + what + '.';\n} /**\n   * Baobab-React Custom Prop Types\n   * ===============================\n   *\n   * PropTypes used to propagate context safely.\n   */\n\n\nexports.default = {\n  baobab: function baobab(props, propName) {\n    if (!(propName in props)) return;\n\n    if (!(props[propName] instanceof _baobab2.default)) return new Error(errorMessage(propName, 'a Baobab tree'));\n  }\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.curry = curry;\nexports.solveMapping = solveMapping;\n/**\n * Baobab-React Helpers\n * =====================\n *\n * Miscellaneous helper functions.\n */\n\n/**\n * Simple curry function.\n */\nfunction curry(fn, arity) {\n  return function f1() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length >= arity) {\n      return fn.apply(null, args);\n    } else {\n      return function f2() {\n        for (var _len2 = arguments.length, args2 = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args2[_key2] = arguments[_key2];\n        }\n\n        return f1.apply(null, args.concat(args2));\n      };\n    }\n  };\n}\n\n/**\n * Solving the mapping given to a higher-order construct.\n */\nfunction solveMapping(mapping, props, context) {\n  if (typeof mapping === 'function') mapping = mapping(props, context);\n\n  return mapping;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.branch = exports.root = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _baobab = require('baobab');\n\nvar _baobab2 = _interopRequireDefault(_baobab);\n\nvar _helpers = require('./utils/helpers');\n\nvar _propTypes = require('./utils/prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Baobab-React Higher Order Component\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * ====================================\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\nstate of the art higher order component.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar makeError = _baobab2.default.helpers.makeError,\n    isPlainObject = _baobab2.default.type.object;\n\n/**\n * Helpers\n */\nfunction displayName(Component) {\n  return Component.name || Component.displayName || 'Component';\n}\n\nfunction invalidMapping(name, mapping) {\n  throw makeError('baobab-react/higher-order.branch: given cursors mapping is invalid (check the \"' + name + '\" component).', { mapping: mapping });\n}\n\n/**\n * Root component\n */\nfunction root(tree, Component) {\n  if (!(tree instanceof _baobab2.default)) throw makeError('baobab-react/higher-order.root: given tree is not a Baobab.', { target: tree });\n\n  if (typeof Component !== 'function') throw Error('baobab-react/higher-order.root: given target is not a valid React component.');\n\n  var name = displayName(Component);\n\n  var ComposedComponent = function (_React$Component) {\n    _inherits(ComposedComponent, _React$Component);\n\n    function ComposedComponent() {\n      _classCallCheck(this, ComposedComponent);\n\n      return _possibleConstructorReturn(this, Object.getPrototypeOf(ComposedComponent).apply(this, arguments));\n    }\n\n    _createClass(ComposedComponent, [{\n      key: 'getChildContext',\n\n\n      // Handling child context\n      value: function getChildContext() {\n        return {\n          tree: tree\n        };\n      }\n\n      // Render shim\n\n    }, {\n      key: 'render',\n      value: function render() {\n        return _react2.default.createElement(Component, this.props);\n      }\n    }]);\n\n    return ComposedComponent;\n  }(_react2.default.Component);\n\n  ComposedComponent.displayName = 'Rooted' + name;\n  ComposedComponent.childContextTypes = {\n    tree: _propTypes2.default.baobab\n  };\n\n  return ComposedComponent;\n}\n\n/**\n * Branch component\n */\nfunction branch(cursors, Component) {\n  if (typeof Component !== 'function') throw Error('baobab-react/higher-order.branch: given target is not a valid React component.');\n\n  var name = displayName(Component);\n\n  if (!isPlainObject(cursors) && typeof cursors !== 'function') invalidMapping(name, cursors);\n\n  var ComposedComponent = function (_React$Component2) {\n    _inherits(ComposedComponent, _React$Component2);\n\n    _createClass(ComposedComponent, [{\n      key: 'getDecoratedComponentInstance',\n      value: function getDecoratedComponentInstance() {\n        return this.decoratedComponentInstance;\n      }\n    }, {\n      key: 'handleChildRef',\n      value: function handleChildRef(component) {\n        this.decoratedComponentInstance = component;\n      }\n\n      // Building initial state\n\n    }]);\n\n    function ComposedComponent(props, context) {\n      _classCallCheck(this, ComposedComponent);\n\n      var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(ComposedComponent).call(this, props, context));\n\n      if (cursors) {\n        var mapping = (0, _helpers.solveMapping)(cursors, props, context);\n\n        if (!mapping) invalidMapping(name, mapping);\n\n        // Creating the watcher\n        _this2.watcher = _this2.context.tree.watch(mapping);\n\n        // Hydrating initial state\n        _this2.state = _this2.watcher.get();\n      }\n      return _this2;\n    }\n\n    // On component mount\n\n\n    _createClass(ComposedComponent, [{\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        var _this3 = this;\n\n        // Creating dispatcher\n        this.dispatcher = function (fn) {\n          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          return fn.apply(undefined, [_this3.context.tree].concat(args));\n        };\n\n        if (!this.watcher) return;\n\n        var handler = function handler() {\n          if (_this3.watcher) _this3.setState(_this3.watcher.get());\n        };\n\n        this.watcher.on('update', handler);\n      }\n\n      // Render shim\n\n    }, {\n      key: 'render',\n      value: function render() {\n        var suppl = { dispatch: this.dispatcher };\n\n        return _react2.default.createElement(Component, _extends({}, this.props, suppl, this.state, { ref: this.handleChildRef.bind(this) }));\n      }\n\n      // On component unmount\n\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        if (!this.watcher) return;\n\n        // Releasing watcher\n        this.watcher.release();\n        this.watcher = null;\n      }\n\n      // On new props\n\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(props) {\n        if (!this.watcher || typeof cursors !== 'function') return;\n\n        var mapping = (0, _helpers.solveMapping)(cursors, props, this.context);\n\n        if (!mapping) invalidMapping(name, mapping);\n\n        // Refreshing the watcher\n        this.watcher.refresh(mapping);\n        this.setState(this.watcher.get());\n      }\n    }]);\n\n    return ComposedComponent;\n  }(_react2.default.Component);\n\n  ComposedComponent.displayName = 'Branched' + name;\n  ComposedComponent.contextTypes = {\n    tree: _propTypes2.default.baobab\n  };\n\n  return ComposedComponent;\n}\n\n// Currying the functions so that they could be used as decorators\nvar curriedRoot = (0, _helpers.curry)(root, 2),\n    curriedBranch = (0, _helpers.curry)(branch, 2);\n\nexports.root = curriedRoot;\nexports.branch = curriedBranch;","var wrappers = require('./dist-modules/higher-order.js');\nexports.root = wrappers.root;\nexports.branch = wrappers.branch;\n","import React, { PropTypes } from 'react';\r\nimport validator from '../Decorators/validator';\r\nimport fromDefaultValue from '../Decorators/fromDefaultValue';\r\nimport { SimpleStringField } from './String';\r\n\r\nclass NumberField extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: props.value\r\n        };\r\n        this.boundChange = this.onChange.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        // if numerical values differ: update\r\n        if (Number(this.state.value) !== Number(nextProps.value)) {\r\n            this.setState({\r\n                value: nextProps.value\r\n            });\r\n        }\r\n    }\r\n    onChange(val) {\r\n        const value = val === '' ? undefined : val;\r\n        const numVal = Number(value);\r\n        this.setState({\r\n            value\r\n        }, () => this.props.onChange(isNaN(numVal) ? value : numVal));\r\n    }\r\n    render() {\r\n        return (\r\n            <SimpleStringField\r\n                {...this.props}\r\n                value={this.state.value}\r\n                onChange={this.boundChange}\r\n            />\r\n        );\r\n    }\r\n}\r\nNumberField.propTypes = {\r\n    value: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default validator(fromDefaultValue(NumberField));\r\n","import ObjectField from './Object';\r\nimport StringField from './String';\r\nimport NumberField from './Number';\r\nimport BooleanField from './Boolean';\r\nimport ArrayField from './Array';\r\n\r\nexport default {\r\n    object: ObjectField,\r\n    string: StringField,\r\n    number: NumberField,\r\n    boolean: BooleanField,\r\n    array: ArrayField\r\n};\r\n","'use strict';\n\nexports.__esModule = true;\nexports['default'] = shallowEqual;\n\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n  for (var i = 0; i < keysA.length; i++) {\n    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = shouldPureComponentUpdate;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _shallowEqual = require('./shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nfunction shouldPureComponentUpdate(nextProps, nextState) {\n  return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);\n}\n\nmodule.exports = exports['default'];","import React, { PropTypes } from 'react';\r\nimport createTree from '../Store';\r\nimport { root, branch } from 'baobab-react/higher-order';\r\nimport SchemaType from './SchemaType';\r\nimport * as actions from '../Store/actions';\r\nimport { validate } from './../Utils/customValidator';\r\n\r\nconst BranchedSchemaType = branch({\r\n    schema: 'schema',\r\n    status: 'status',\r\n    value: 'value'\r\n}, SchemaType);\r\n\r\n/**\r\n * Top Component\r\n */\r\nclass Container extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.tree = createTree();\r\n        this.updateTree(props.value, props.schema);\r\n        // should use dispatcher instead. from baobab-react v2\r\n        this.ACTIONS = {};\r\n        Object.keys(actions)\r\n            .forEach(action => {\r\n                this.ACTIONS[action] = actions[action].bind(this.tree, this.tree);\r\n                return;\r\n            });\r\n        this.rooted = root(this.tree, BranchedSchemaType);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.updateTree(nextProps.value, nextProps.schema);\r\n    }\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n    componentWillUnmount() {\r\n        this.tree.release();\r\n    }\r\n    getValue() {\r\n        return this.tree.get('value');\r\n    }\r\n    updateTree(value, schema) {\r\n        this.tree.select('value').release();\r\n        this.tree.select('value').set(value);\r\n        this.tree.select('schema').set(schema);\r\n        this.tree.select('status').release();\r\n        this.tree.commit();\r\n        this.tree.select('value')\r\n            .on('update', event =>\r\n                this.props.onChange(\r\n                    event.data.currentData,\r\n                    validate(\r\n                        event.data.currentData,\r\n                        this.tree.get('schema'),\r\n                        event.data.currentData\r\n                    ).errors\r\n                )\r\n            );\r\n    }\r\n    validate() {\r\n        const validationResult = validate(this.tree.get('value'),\r\n            this.tree.get('schema'), this.tree.get('value'));\r\n        const { setErrors } = this.ACTIONS;\r\n        const errorMap = new Map();\r\n        // Collect each error associated with a given path\r\n        validationResult.errors.forEach(error => {\r\n            const errors = errorMap.get(error.property) || [];\r\n            errors.push(error.message); // Add new error\r\n            errorMap.set(error.property, errors);\r\n        });\r\n        errorMap.forEach((value, key) => {\r\n            setErrors(key.split(/\\.|\\[|\\]/).filter(x => x !== '').slice(1), value);\r\n        });\r\n        return validationResult.errors;\r\n    }\r\n    render() {\r\n        const Rooted = this.rooted;\r\n        return (\r\n            <Rooted\r\n                onChange={this.props.onChange}\r\n                path={[]}\r\n                actions={this.ACTIONS}\r\n            />\r\n        );\r\n    }\r\n}\r\nContainer.propTypes = {\r\n    onChange: PropTypes.func,\r\n    schema: PropTypes.object,\r\n    value: PropTypes.any\r\n};\r\n\r\nexport default Container;\r\n"],"names":["updateDefault","value","path","actions","defaultValue","schema","val","undefined","setDefaultValue","fromDefaultValue","Comp","DefaultValue","props","nextProps","React","this","Component","undefinedWidgetFactory","type","labeled","label","required","requiredClassName","className","view","title","editKey","description","errorMessage","onInputChange","func","event","target","checked","Input","placeholder","onChange","TextWidget","ArrowNumberWidget","CheckboxWidget","ArrayWidget","renderChild","child","index","onClick","onChildRemove","children","Children","map","onChildAdd","ObjectWidget","SelectWidget","_onChange","choices","c","e","defaultWidget","DefaultWidget","setDefaultWidgets","obj","Object","assign","Widget","restSchema","_Wdgt","Type","renderType","Array","isArray","find","t","Wdgt","EMPTYOBJECT","validate","formValue","customValidator","validated","Validator","validation","getFormValue","err","errors","error","message","getErrors","renderChildren","sortProperties","a","b","aIndex","properties","bIndex","mergedProperties","keys","forEach","hasOwnProperty","v","push","sort","i","length","prop","SchemaType","defaultProperties","ObjectField","addKey","key","removeKey","alterKey","newKey","p","StringField","String","BooleanField","onChildChange","oldValue","filter","Number","concat","items","valueItems","ArrayField","visibility","Visible","visible","Undefined","infer","updatePath","currentPath","inference","Infer","inferedSchema","doAction","args","setErrors","tree","errorPath","STATUS","ERRORS","errorsCursor","select","get","splice","set","NOERRORS","update","statusPath","VALUE","STATE","getStatus","updateSchema","updatedPath","reduce","prev","createTree","Baobab","_interopRequireDefault","__esModule","default","propName","what","defineProperty","exports","_baobab","require$$0","_baobab2","baobab","Error","curry","fn","arity","f1","_len","arguments","_key","apply","_len2","args2","_key2","solveMapping","mapping","context","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","displayName","name","invalidMapping","makeError","root","ComposedComponent","_React$Component","getPrototypeOf","_createClass","_react2","createElement","childContextTypes","_propTypes2","branch","cursors","isPlainObject","_React$Component2","_this2","_helpers","watcher","watch","state","decoratedComponentInstance","component","_this3","dispatcher","handler","setState","on","suppl","dispatch","_extends","ref","handleChildRef","bind","release","refresh","contextTypes","source","defineProperties","descriptor","protoProps","staticProps","_react","require$$3","require$$2","require$$1","_propTypes","helpers","object","curriedRoot","curriedBranch","wrappers","attributes","errored","options","jsonschema","SchemaError","msg","validator","NumberField","boundChange","_this","numVal","isNaN","SimpleStringField","shallowEqual","objA","objB","keysA","keysB","bHasOwnProperty","module","shouldPureComponentUpdate","nextState","_shallowEqual2","_shallowEqual","Fields","UndefinedField","BranchedSchemaType","Container","updateTree","ACTIONS","action","rooted","commit","data","currentData","_validate","validationResult","errorMap","Map","property","split","x","slice","Rooted"],"mappings":"mYAEA,QAASA,SAAgBC,KAAAA,MAAOC,IAAAA,KAAMC,IAAAA,QAA0BC,IAAjBC,OAAUJ,MAC/CK,EAAgBC,SAAVN,EAAsBA,EAAQG,CACtCH,KAAUK,KACFE,gBAAgBN,EAAMI,GAItC,QAASG,GAAiBC,MAChBC,0BACUC,+DACFA,aACQA,0EAEQC,KAIRA,0CAGNC,iBAACJ,EAASK,KAAKH,cAZJE,EAAME,iBAuB1BL,GC/BX,QAASM,GAAuBC,SACrB,kBAECJ,4CACoBI,wBCJhC,QAASC,GAAQT,WACJU,GAAMR,MACLS,GAAWT,EAAMP,OAAOgB,SACxBC,EAAoBD,EAAW,WAAa,SAE9CP,qDACWS,UAAcX,EAAMP,OAAOa,cAAaI,2BACrCC,UAAU,WAAeC,KAAKC,OAASb,EAAMc,yBAClDhB,EAASE,iCACGY,KAAKG,2CACLC,sBAqBtBR,GC/BX,QAASS,GAAcC,SACZ,UAAkBC,KACK,aAAtBA,EAAMC,OAAOd,KACRa,EAAMC,OAAOC,QAEbF,EAAMC,OAAO/B,QAK9B,QAASiC,GAAMtB,SAEPE,+BACUF,EAAMM,iBACCN,EAAMP,OAAO8B,kBACnBvB,EAAMX,gBACFW,EAAMW,mBACPM,EAAcjB,EAAMwB,kBACrBxB,EAAMqB,UChB3B,QAASI,GAAWzB,SAEZE,iBAACoB,QACOtB,QACC,YCJjB,QAAS0B,GAAkB1B,SAEnBE,iBAACoB,QACOtB,QACC,YCJjB,QAAS2B,GAAe3B,SAEhBE,iBAACoB,QACOtB,QACC,mBACIA,EAAMX,SCN3B,QAASuC,GAAY5B,WACR6B,GAAYC,EAAOC,SAChB7B,oDACE8B,QAAShC,EAAMiC,cAAcF,eAKrCG,GAAWhC,EAAMiC,SAASC,IAAIpC,EAAMkC,SAAUL,SAEhD3B,kFAIU8B,QAAShC,EAAMqC,kBCdjC,QAASC,GAAatC,SAEdE,8BACWgC,UCJnB,QAASK,SAAe3B,KAAAA,KAAMvB,IAAAA,MAAOmD,IAAAhB,SAC3BiB,EAAU7B,EAAK6B,QAAQL,IAAI,kBAC7BlC,+BACSwC,EAAErD,YACAqD,EAAErD,SAENmB,eAIPN,2BAAQb,MAAOA,EAAOmC,SAAU,kBAAKgB,GAASG,EAAEvB,OAAO/B,YCM/D,QAASuD,GAActC,SACZuC,IAAcvC,IAASD,EAAuBC,GAGzD,QAASwC,GAAkBC,MACPC,OAAOC,UAAWJ,GAAeE,GCnBrD,QAASG,GAAOlD,MACJP,GAAWO,EAAXP,OACAmB,EAAwBnB,EAAxBmB,KAASuC,KAAe1D,eAC5BmB,EAAM,IACEN,GAASM,EAATN,QACY,gBAATA,GAAmB,IACpB8C,GAAOR,EAActC,SAEvBJ,iBAACkD,QACOpD,UACImD,OACFvC,QAIE,kBAATN,GAAqB,IACtB+C,GAAO/C,QAETJ,iBAACmD,QACOrD,UACImD,OACFvC,SAKhB0C,GAAaC,MAAMC,QAAQ/D,EAAOa,MACpCb,EAAOa,KAAKmD,KAAK,kBAAW,SAANC,IACtBjE,EAAOa,KACLqD,EAAOf,EAAcU,SAEvBpD,iBAACyD,QACO3D,UACImD,OACFvC,GAAQgD,MCzB1B,QAASC,GAASxE,EAAOI,EAAQqE,SACtBC,IAAgBF,SAASxE,EAAOI,iBCX3C,QAASuE,GAAUlE,WACNmE,GAAUjE,WACNwB,GAAS9B,MACRwE,GAAaL,EAASnE,EAAKM,EAAMP,OAAQO,EAAMT,QAAQ4E,gBACvDC,EAAMF,EAAWG,OAAOjC,IAAI,kBAASkC,GAAMC,YAC3C/C,SAAS9B,EAAK0E,SAIpBlE,iBAACJ,QACOE,gBACUA,EAAMT,QAAQiF,UAAUxE,EAAMV,eAClCkC,WAcfyC,GCtBX,QAASQ,GAAezE,WAeX0E,GAAeC,EAAGC,MACjBC,GAASC,EAAWH,GAAKG,EAAWH,GAAG5C,OAAS,EAAI,EACpDgD,EAASD,EAAWF,GAAKE,EAAWF,GAAG7C,OAAS,EAAI,QACnD8C,GAASE,KAjBd7C,MACA4C,EAAa9E,EAAMP,OAAOqF,eAC1BzF,EAAQW,EAAMX,UAEd2F,EAAmBhC,OAAOiC,KAAKH,UAE9BG,KAAK5F,GAAO6F,QAAQ,YACnBJ,EAAWK,eAAeC,MAGbC,KAAKD,OAUTE,KAAKZ,OACjB,GAAIa,GAAI,EAAGA,EAAIP,EAAiBQ,OAAQD,GAAK,EAAG,IAC3CE,GAAOT,EAAiBO,MAC1BT,EAAWK,eAAeM,KACjBJ,KACLnF,gBAACwF,SACO1F,UACI8E,EAAWW,SACZpG,EAAMoG,WACJA,MACJA,UAGV,IACGhG,GAASO,EAAMP,OAAOkG,oBACnBN,KACLnF,gBAACwF,SACO1F,UACIP,QACDJ,EAAMoG,WACJA,MACJA,aAKdvD,GAGX,QAAS0D,GAAY5F,WACR6F,GAAOC,EAAKzG,KACXmC,SAASwB,OAAOC,UAAWjD,EAAMX,YAClCyG,EAAMzG,aAIN0G,GAAUD,MACTzG,GAAQ2D,OAAOC,UAAWjD,EAAMX,aAC/BA,GAAMyG,KACPtE,SAASnC,WAGV2G,GAASF,EAAKG,MACb5G,aACC4F,KAAKjF,EAAMX,OAAO6F,QAAQ,YACzBgB,IAAMJ,IACAI,GAAKlG,EAAMX,MAAM6G,KAEjBD,GAAUjG,EAAMX,MAAM6G,OAG9B1E,SAASnC,SAIfa,yBACQF,UACI6F,YACGE,WACDC,MAEMhG,ICpF5B,QAASmG,GAAYnG,MACXN,GAAsBC,SAAhBK,EAAMX,OAAuC,OAAhBW,EAAMX,MAC3C+G,OAAOpG,EAAMX,OACbW,EAAMX,YAENa,iBAACgD,QACOlD,SACGN,KCPnB,QAAS2G,GAAarG,SACVE,iBAACgD,EAAWlD,GCDxB,QAASsG,GAAcvE,EAAO/B,SACnB,UAAkBN,MACbL,GAAUW,EAAVX,KACJA,KACMmC,SAASnC,EAAM+C,IAAI,SAACO,EAAG4C,UACpBA,KAAOxD,EACDY,EAEJjD,OAGL8B,UAAU9B,KAK5B,QAASuC,GAAcjC,SACZ,UAAkB+B,SACd,eACGwE,GAAWvG,EAAMX,YACjBmC,SAAS+E,EAASC,OAAO,SAAC7D,EAAG4C,SAAMkB,QAAOlB,KAAOkB,OAAO1E,QAK1E,QAASM,GAAWrC,SACT,eACGuG,GAAWvG,EAAMX,YACjBmC,SAAS+E,EAASG,QAAQ/G,WAIxC,QAAS8E,GAAezE,MACZX,GAA2CW,EAA3CX,QAA2CW,EAApCP,OAAUD,IAAAA,aAAcmH,IAAAA,MACnCC,WACAvH,EACaA,EACNG,EACMA,QAIX0C,eACKgD,QAAQ,SAACxF,EAAK6F,SAAMrD,GAASmD,KACpCnF,gBAACwF,SACO1F,UACI2G,QACDjH,UACE0G,OAAOb,OACXA,WACKe,EAAcf,EAAGvF,SAG5BkC,EAGX,QAAS2E,GAAW7G,SAEZE,yBACQF,cACQqC,EAAWrC,iBACRiC,EAAcjC,OAEbA,IClE5B,QAAS8G,GAAWhH,WACPiH,GAAQ/G,MACKgH,GAAqBhH,EAA/BP,OAAUuH,QAAW3H,EAAUW,EAAVX,YACzB2H,KAAYA,EAAQ3H,EAAOW,EAAMT,QAAQ4E,gBAClC,KAEHjE,gBAACJ,EAASE,SAUf+G,GChBX,QAASE,GAAUjH,SACPE,sDAAgCF,EAAMP,OAAOa,YAAWN,EAAMV,UCHnE,QAAS4H,GAAM7H,6BACHA,kBAAAA,QACV,eACM,aACN,eACM,aACN,gBACM,cACN,eACMkE,OAAMC,QAAQnE,GAAS,QAAU,uBAEjC,UCHf,QAAS8H,GAAWC,EAAatG,SACzBA,GACOsG,EAAYV,QAAQ5F,IAExBsG,EAQX,QAASC,GAAUvH,WACNwH,GAAMtH,MACHP,GAAWO,EAAXP,OACFH,EAAO6H,EAAWnH,EAAMV,KAAMU,EAAMc,SACtCyG,EAAgB9H,QACf8H,IAAkBA,EAAcpC,eAAe,aAC9B7E,KAAM4G,EAAMlH,EAAMX,SAIpCa,gBAACJ,QACOE,QACEV,SACEiI,WAYbD,GChCX,QAASE,GAAStG,EAAM5B,SACb,uCAAmBmI,yDACjBnI,UAASmI,KCTf,QAASC,GAAUC,EAAMrI,EAAM+E,MAC5BuD,IAAaC,IAAQnB,OAAOpH,GAAMoH,QAAQoB,KAC1CC,EAAeJ,EAAKK,OAAOJ,EAC7BvD,IAAUA,EAAOmB,QAAUjC,MAAMC,QAAQuE,EAAaE,UACzCC,QAAQ,EAAGH,EAAaE,MAAMzC,WAC9BkB,OAAOrC,UAEP8D,IAAI9D,GAAU+D,IAY5B,QAASC,GAAOV,EAAMrI,EAAMD,EAAOgF,MAChCiE,IAAcT,IAAQnB,OAAOpH,KAC9B6I,KAAKI,IAAO7B,OAAOpH,GAAOD,KAC1B8I,IAAIG,EAAW5B,QAAQ8B,KAAS,WAC3Bb,EAAMrI,EAAM+E,GAGnB,QAASzE,GAAgB+H,EAAMrI,EAAMD,KACnC8I,KAAKI,IAAO7B,OAAOpH,GAAOD,KAC1B8I,KAAKN,IAAQnB,OAAOpH,GAAMoH,QAAQ8B,KAAS,YAG7C,QAASC,GAAUd,EAAMrI,SACrBqI,GAAKM,KAAKJ,IAAQnB,OAAOpH,GAAMoH,QAAQ8B,MAG3C,QAAShE,GAAUmD,EAAMrI,SACrBqI,GAAKM,KAAKJ,IAAQnB,OAAOpH,GAAMoH,QAAQoB,OAAaM,GAGxD,QAASjE,GAAawD,SAClBA,GAAKM,IAAIM,IAGb,QAASG,GAAaf,EAAMrI,EAAMD,MAC/BsJ,GAAcrJ,EAAKsJ,OAAO,SAACC,EAAMnJ,SACP,WAAxBiI,EAAKM,IAAIY,GAAMvI,KACRuI,EAAKnC,QAAQ,aAAchH,IACH,UAAxBiI,EAAKM,IAAIY,GAAMvI,KACfuI,EAAKnC,QAAQ,UAEjBmC,EAAKnC,QAAQhH,MACpB,aACCyI,IAAIQ,EAAatJ,2FCxDpByJ,EAAa,iBAAM,IAAIC,sDCQ7B,QAASC,GAAuBjG,GAAO,MAAOA,IAAOA,EAAIkG,WAAalG,GAAQmG,QAASnG,GAEvF,QAAS/B,GAAamI,EAAUC,GAC9B,MAAO,cAAgBD,EAAW,4BAA8BC,EAAO,IAXzEpG,OAAOqG,eAAeC,EAAS,cAC7BjK,OAAO,GAGT,IAAIkK,GAAUC,EAEVC,EAAWT,EAAuBO,EActCD,GAAQJ,SACNQ,OAAQ,SAAgB1J,EAAOmJ,GAC7B,GAAMA,IAAYnJ,GAElB,MAAMA,GAAMmJ,YAAqBM,GAASP,QAA1C,OAA2D,GAAIS,OAAM3I,EAAamI,EAAU,2FCThG,QAASS,GAAMC,EAAIC,GACjB,MAAO,SAASC,KACd,IAAK,GAAIC,GAAOC,UAAUzE,OAAQiC,EAAOlE,MAAMyG,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3EzC,EAAKyC,GAAQD,UAAUC,EAGzB,OAAIzC,GAAKjC,QAAUsE,EACVD,EAAGM,MAAM,KAAM1C,GAEf,WACL,IAAK,GAAI2C,GAAQH,UAAUzE,OAAQ6E,EAAQ9G,MAAM6G,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACjFD,EAAMC,GAASL,UAAUK,EAG3B,OAAOP,GAAGI,MAAM,KAAM1C,EAAKf,OAAO2D,MAS1C,QAASE,GAAaC,EAASxK,EAAOyK,GAGpC,MAFuB,kBAAZD,KAAwBA,EAAUA,EAAQxK,EAAOyK,IAErDD,EAzCTxH,OAAOqG,eAAeC,EAAS,cAC7BjK,OAAO,IAETiK,EAAQM,MAAQA,EAChBN,EAAQiB,aAAeA,yECmBvB,QAASvB,GAAuBjG,GAAO,MAAOA,IAAOA,EAAIkG,WAAalG,GAAQmG,QAASnG,GAEvF,QAAS2H,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAElO,QAASE,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYrI,OAAOsI,OAAOF,GAAcA,EAAWC,WAAaE,aAAelM,MAAO8L,EAAUK,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeN,IAAYpI,OAAO2I,eAAiB3I,OAAO2I,eAAeR,EAAUC,GAAcD,EAASS,UAAYR,GAcje,QAASS,GAAYzL,GACnB,MAAOA,GAAU0L,MAAQ1L,EAAUyL,aAAe,YAGpD,QAASE,GAAeD,EAAMtB,GAC5B,KAAMwB,GAAU,kFAAoFF,EAAO,iBAAmBtB,QAASA,IAMzI,QAASyB,GAAKtE,EAAMvH,GAClB,KAAMuH,YAAgB8B,GAASP,SAAU,KAAM8C,GAAU,+DAAiE5K,OAAQuG,GAElI,IAAyB,kBAAdvH,GAA0B,KAAMuJ,OAAM,+EAEjD,IAAImC,GAAOD,EAAYzL,GAEnB8L,EAAoB,SAAUC,GAGhC,QAASD,KAGP,MAFAxB,GAAgBvK,KAAM+L,GAEfpB,EAA2B3K,KAAM6C,OAAOoJ,eAAeF,GAAmB/B,MAAMhK,KAAM8J,YAuB/F,MA5BAiB,GAAUgB,EAAmBC,GAQ7BE,EAAaH,IACXpG,IAAK,kBAILzG,MAAO,WACL,OACEsI,KAAMA,MAOV7B,IAAK,SACLzG,MAAO,WACL,MAAOiN,GAAQpD,QAAQqD,cAAcnM,EAAWD,KAAKH,WAIlDkM,GACPI,EAAQpD,QAAQ9I,UAOlB,OALA8L,GAAkBL,YAAc,SAAWC,EAC3CI,EAAkBM,mBAChB7E,KAAM8E,EAAYvD,QAAQQ,QAGrBwC,EAMT,QAASQ,GAAOC,EAASvM,GACvB,GAAyB,kBAAdA,GAA0B,KAAMuJ,OAAM,iFAEjD,IAAImC,GAAOD,EAAYzL,EAElBwM,GAAcD,IAA+B,kBAAZA,IAAwBZ,EAAeD,EAAMa,EAEnF,IAAIT,GAAoB,SAAUW,GAkBhC,QAASX,GAAkBlM,EAAOyK,GAChCC,EAAgBvK,KAAM+L,EAEtB,IAAIY,GAAShC,EAA2B3K,KAAM6C,OAAOoJ,eAAeF,GAAmBlB,KAAK7K,KAAMH,EAAOyK,GAEzG,IAAIkC,EAAS,CACX,GAAInC,IAAW,EAAGuC,EAASxC,cAAcoC,EAAS3M,EAAOyK,EAEpDD,IAASuB,EAAeD,EAAMtB,GAGnCsC,EAAOE,QAAUF,EAAOrC,QAAQ9C,KAAKsF,MAAMzC,GAG3CsC,EAAOI,MAAQJ,EAAOE,QAAQ/E,MAEhC,MAAO6E,GAoET,MArGA5B,GAAUgB,EAAmBW,GAE7BR,EAAaH,IACXpG,IAAK,gCACLzG,MAAO,WACL,MAAOc,MAAKgN,8BAGdrH,IAAK,iBACLzG,MAAO,SAAwB+N,GAC7BjN,KAAKgN,2BAA6BC,MA6BtCf,EAAaH,IACXpG,IAAK,qBACLzG,MAAO,WACL,GAAIgO,GAASlN,IAWb,IARAA,KAAKmN,WAAa,SAAUzD,GAC1B,IAAK,GAAIG,GAAOC,UAAUzE,OAAQiC,EAAOlE,MAAMyG,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAC9FzC,EAAKyC,EAAO,GAAKD,UAAUC,EAG7B,OAAOL,GAAGM,MAAMxK,QAAY0N,EAAO5C,QAAQ9C,MAAMjB,OAAOe,KAGrDtH,KAAK6M,QAAV,CAEA,GAAIO,GAAU,WACRF,EAAOL,SAASK,EAAOG,SAASH,EAAOL,QAAQ/E,OAGrD9H,MAAK6M,QAAQS,GAAG,SAAUF,OAM5BzH,IAAK,SACLzG,MAAO,WACL,GAAIqO,IAAUC,SAAUxN,KAAKmN,WAE7B,OAAOhB,GAAQpD,QAAQqD,cAAcnM,EAAWwN,KAAazN,KAAKH,MAAO0N,EAAOvN,KAAK+M,OAASW,IAAK1N,KAAK2N,eAAeC,KAAK5N,YAM9H2F,IAAK,uBACLzG,MAAO,WACAc,KAAK6M,UAGV7M,KAAK6M,QAAQgB,UACb7N,KAAK6M,QAAU,SAMjBlH,IAAK,4BACLzG,MAAO,SAAmCW,GACxC,GAAKG,KAAK6M,SAA8B,kBAAZL,GAA5B,CAEA,GAAInC,IAAW,EAAGuC,EAASxC,cAAcoC,EAAS3M,EAAOG,KAAKsK,QAEzDD,IAASuB,EAAeD,EAAMtB,GAGnCrK,KAAK6M,QAAQiB,QAAQzD,GACrBrK,KAAKqN,SAASrN,KAAK6M,QAAQ/E,YAIxBiE,GACPI,EAAQpD,QAAQ9I,UAOlB,OALA8L,GAAkBL,YAAc,WAAaC,EAC7CI,EAAkBgC,cAChBvG,KAAM8E,EAAYvD,QAAQQ,QAGrBwC,EA7NTlJ,OAAOqG,eAAeC,EAAS,cAC7BjK,OAAO,IAETiK,EAAQoD,OAASpD,EAAQ2C,KAAOtM,MAEhC,IAAIiO,GAAW5K,OAAOC,QAAU,SAAU7B,GAAU,IAAK,GAAImE,GAAI,EAAGA,EAAI0E,UAAUzE,OAAQD,IAAK,CAAE,GAAI4I,GAASlE,UAAU1E,EAAI,KAAK,GAAIO,KAAOqI,GAAcnL,OAAOqI,UAAUlG,eAAe6F,KAAKmD,EAAQrI,KAAQ1E,EAAO0E,GAAOqI,EAAOrI,IAAY,MAAO1E,IAEnPiL,EAAe,WAAc,QAAS+B,GAAiBhN,EAAQpB,GAAS,IAAK,GAAIuF,GAAI,EAAGA,EAAIvF,EAAMwF,OAAQD,IAAK,CAAE,GAAI8I,GAAarO,EAAMuF,EAAI8I,GAAW7C,WAAa6C,EAAW7C,aAAc,EAAO6C,EAAW3C,cAAe,EAAU,SAAW2C,KAAYA,EAAW5C,UAAW,GAAMzI,OAAOqG,eAAejI,EAAQiN,EAAWvI,IAAKuI,IAAiB,MAAO,UAAUzD,EAAa0D,EAAYC,GAAiJ,MAA9HD,IAAYF,EAAiBxD,EAAYS,UAAWiD,GAAiBC,GAAaH,EAAiBxD,EAAa2D,GAAqB3D,MAE5hB4D,EAASC,EAETnC,EAAUtD,EAAuBwF,GAEjCjF,EAAUmF,EAEVjF,EAAWT,EAAuBO,GAElCwD,EAAW4B,EAEXC,EAAapF,EAEbiD,EAAczD,EAAuB4F,GAgBrC5C,EAAYvC,EAASP,QAAQ2F,QAAQ7C,UACrCY,EAAgBnD,EAASP,QAAQ5I,KAAKwO,OA2LtCC,GAAe,EAAGhC,EAASnD,OAAOqC,EAAM,GACxC+C,GAAiB,EAAGjC,EAASnD,OAAO8C,EAAQ,EAEhDpD,GAAQ2C,KAAO8C,EACfzF,EAAQoD,OAASsC,yECvOjB,GAAIC,GAAWzF,CACfF,GAAQ2C,KAAOgD,EAAShD,KACxB3C,EAAQoD,OAASuC,EAASvC,06CxBWXnM,EAAQkB,MCARlB,EAAQmB,MCKRnB,EAAQoB,MCSRpB,EAAQqB,MCZRrB,EAAQ+B,GEPnBO,WACQpB,UACAA,WACCE,SACFC,UACCU,eACKZ,UACLa,GCZNqB,MCDAG,GAAkB,GAAIE,YAC5BF,IAAgBmL,WAAWC,QAAU,SAAyBxE,EAAUlL,EAAQ2P,MAC9C,kBAAnB3P,GAAO0P,aACR,IAAIE,GAAWC,YAAY,mCAE/BC,GAAM9P,EAAO0P,QAAQxE,EAAUyE,EAAQtL,cACzCyL,QACOA,WE+FAC,EAAU3P,EAAiB+F,OCzE3B4J,EAAU3P,EAAiBsG,Ic1BpCsJ,0BACUzP,+DACFA,aACDkN,aACMlN,EAAMX,SAEZqQ,YAAcC,EAAKnO,SAASuM,+EAEX9N,GAElBwG,OAAOtG,KAAK+M,MAAM7N,SAAWoH,OAAOxG,EAAUZ,aACzCmO,gBACMvN,EAAUZ,yCAIpBK,cACCL,EAAgB,KAARK,EAAaC,OAAYD,EACjCkQ,EAASnJ,OAAOpH,QACjBmO,mBAEF,iBAAMV,GAAK9M,MAAMwB,SAASqO,MAAMD,GAAUvQ,EAAQuQ,4CAIjD1P,iBAAC4P,QACO3P,KAAKH,aACFG,KAAK+M,MAAM7N,eACRc,KAAKuP,sBA5BLxP,EAAME,cAsCjBoP,EAAU3P,EAAiB4P,QblC3BD,EAAU3P,EAAiBwG,OCgE3BxG,EAAiBgH,calEpBjB,UACAO,UACAsJ,WACCpJ,SACFQ,uBCNX,QAASkJ,GAAaC,EAAMC,GAC1B,GAAID,IAASC,EACX,OAAO,CAGT,IAAoB,gBAATD,IAA8B,OAATA,GAAiC,gBAATC,IAA8B,OAATA,EAC3E,OAAO,CAGT,IAAIC,GAAQlN,OAAOiC,KAAK+K,GACpBG,EAAQnN,OAAOiC,KAAKgL,EAExB,IAAIC,EAAM1K,SAAW2K,EAAM3K,OACzB,OAAO,CAKT,KAAK,GADD4K,GAAkBpN,OAAOqI,UAAUlG,eAAe4I,KAAKkC,GAClD1K,EAAI,EAAGA,EAAI2K,EAAM1K,OAAQD,IAChC,IAAK6K,EAAgBF,EAAM3K,KAAOyK,EAAKE,EAAM3K,MAAQ0K,EAAKC,EAAM3K,IAC9D,OAAO,CAIX,QAAO,EA3BT+D,EAAQL,YAAa,EACrBK,EAAiB,QAAIyG,EA6BrBM,EAAO/G,QAAUA,EAAiB,sFC3BlC,QAASN,GAAuBjG,GAAO,MAAOA,IAAOA,EAAIkG,WAAalG,GAAQmG,QAAWnG,GAMzF,QAASuN,GAA0BrQ,EAAWsQ,GAC5C,QAAS,EAAGC,EAAwB,SAAGrQ,KAAKH,MAAOC,MAAgB,EAAGuQ,EAAwB,SAAGrQ,KAAK+M,MAAOqD,GAV/GjH,EAAQL,YAAa,EACrBK,EAAiB,QAAIgH,CAIrB,IAAIG,GAAgBjH,GAEhBgH,EAAiBxH,EAAuByH,EAM5CJ,GAAO/G,QAAUA,EAAiB,mEVS5B5D,0BACU1F,+DACFA,aACDwB,SAAWgG,EAASxH,EAAMT,QAAQ8I,OAAQrI,EAAMV,sGAEhCmI,+CACd6I,IAA0BnG,MAAMhK,KAAMsH,uCAG3BnH,GAAWH,KAAKH,MAA1BP,OAAUa,KACZgD,EAAaC,MAAMC,QAAQlD,GAAQA,EAAKmD,KAAK,kBAAW,SAANC,IAAgBpD,EAClE+C,EAAOqN,GAAOpN,IAAeqN,QAE/BzQ,iBAACmD,QACOlD,KAAKH,gBACCG,KAAKqB,mBAfNtB,EAAME,cAmChBiH,EAAUL,EAAQtB,KC3D3B6C,GAAQ,QACRV,GAAS,SACTW,GAAQ,QACRV,GAAS,SACTM,uHUGAwI,GAAqBlE,UACf,gBACA,eACD,SACRhH,IAKGmL,0BACU7Q,+DACFA,aACD2H,KAAOmB,MACPgI,WAAW9Q,EAAMX,MAAOW,EAAMP,UAE9BsR,kBACE9L,KAAK1F,IACP2F,QAAQ,cACA6L,QAAQC,GAAUzR,GAAQyR,GAAQjD,KAAK4B,EAAKhI,KAAMgI,EAAKhI,UAG/DsJ,OAAShF,GAAK0D,EAAKhI,KAAMiJ,2EAER3Q,QACjB6Q,WAAW7Q,EAAUZ,MAAOY,EAAUR,+DAGpC,sDAGFkI,KAAKqG,mDAGH7N,MAAKwH,KAAKM,IAAI,4CAEd5I,EAAOI,mBACTkI,KAAKK,OAAO,SAASgG,eACrBrG,KAAKK,OAAO,SAASG,IAAI9I,QACzBsI,KAAKK,OAAO,UAAUG,IAAI1I,QAC1BkI,KAAKK,OAAO,UAAUgG,eACtBrG,KAAKuJ,cACLvJ,KAAKK,OAAO,SACZyF,GAAG,SAAU,kBACVX,GAAK9M,MAAMwB,SACPL,EAAMgQ,KAAKC,YACXC,EACIlQ,EAAMgQ,KAAKC,YACXtE,EAAKnF,KAAKM,IAAI,UACd9G,EAAMgQ,KAAKC,aACb/M,gDAKRiN,GAAmBD,EAASlR,KAAKwH,KAAKM,IAAI,SAC5C9H,KAAKwH,KAAKM,IAAI,UAAW9H,KAAKwH,KAAKM,IAAI,UACnCP,EAAcvH,KAAK4Q,QAAnBrJ,UACF6J,EAAW,GAAIC,cAEJnN,OAAOa,QAAQ,eACtBb,GAASkN,EAAStJ,IAAI3D,EAAMmN,gBAC3BpM,KAAKf,EAAMC,WACT4D,IAAI7D,EAAMmN,SAAUpN,OAExBa,QAAQ,SAAC7F,EAAOyG,KACXA,EAAI4L,MAAM,YAAYlL,OAAO,kBAAW,KAANmL,IAAUC,MAAM,GAAIvS,KAE7DiS,EAAiBjN,2CAGlBwN,GAAS1R,KAAK8Q,aAEhB/Q,iBAAC2R,YACa1R,KAAKH,MAAMwB,yBAEZrB,KAAK4Q,iBAlEN7Q,EAAME"}